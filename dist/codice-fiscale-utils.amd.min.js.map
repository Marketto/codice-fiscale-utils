{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"moment\"","webpack:///./node_modules/@babel/runtime/helpers/classCallCheck.js","webpack:///./node_modules/@babel/runtime/helpers/createClass.js","webpack:///./node_modules/@babel/runtime/regenerator/index.js","webpack:///./node_modules/@babel/runtime/helpers/slicedToArray.js","webpack:///external \"@marketto/diacritic-remover\"","webpack:///./node_modules/@babel/runtime/helpers/toConsumableArray.js","webpack:///./node_modules/@babel/runtime/helpers/defineProperty.js","webpack:///./node_modules/regenerator-runtime/runtime.js","webpack:///./node_modules/@babel/runtime/helpers/arrayWithHoles.js","webpack:///./node_modules/@babel/runtime/helpers/iterableToArrayLimit.js","webpack:///./node_modules/@babel/runtime/helpers/nonIterableRest.js","webpack:///./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack:///./node_modules/@babel/runtime/helpers/iterableToArray.js","webpack:///./node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack:///./src/birthMonth.enum.js","webpack:///./src/belfiore.js","webpack:///./src/validator.const.js","webpack:///./src/checkDigitizer.js","webpack:///./src/dateValidator.const.js","webpack:///./src/gender.enum.js","webpack:///./src/omocode.enum.js","webpack:///./src/parser.js","webpack:///./src/error.js","webpack:///./src/validator.js","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__WEBPACK_EXTERNAL_MODULE__0__","instance","Constructor","TypeError","_defineProperties","target","props","length","descriptor","configurable","writable","protoProps","staticProps","arrayWithHoles","iterableToArrayLimit","nonIterableRest","arr","__WEBPACK_EXTERNAL_MODULE__5__","arrayWithoutHoles","iterableToArray","nonIterableSpread","obj","runtime","undefined","Op","hasOwn","$Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","context","Context","_invoke","state","GenStateSuspendedStart","method","arg","GenStateExecuting","Error","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","done","GenStateSuspendedYield","makeInvokeMethod","fn","err","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","previousPromise","callInvokeWithMethodAndArg","Promise","resolve","reject","invoke","result","__await","then","unwrapped","error","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","constructor","displayName","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","__proto__","awrap","async","iter","toString","keys","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","Function","Array","isArray","_arr","_n","_d","_e","_s","_i","arr2","from","freeze","Proxy","MONTHS","receiver","monthCode","toUpperCase","includes","indexOf","BelfioreConnector","_ref","data","licenses","activeDate","codeMatcher","province","classCallCheck_default","hiddenValueConf","defineProperties","_data","_licenses","_activeDate","_codeMatcher","_province","_this","map","resource","belfioreCode","e","locationByIndex","reduce","a","b","concat","filter","output","g","resourceData","indexer","indexByName","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","index","roundItem","matcher","RegExp","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","date","arguments","moment","code","test","paramName","base32name","belfioreToInt","padStart","binaryfindIndex","text","start","end","rangedStart","rangedEnd","currentLength","targetIndex","Math","floor","targetValure","substr","ceil","goAhead","upperCaseCode","charCodeAt","pow","parseInt","String","fromCharCode","base32daysFrom1861","add","list","startIndex","endIndex","counter","substring","regExpMatcher","seekEntryEndIndex","entryIndex","targetName","_ref2","belfioreIndex","belFioreInt","belfioreFromInt","provinceOrCountry","dateIndex","creationDate","decodeDate","startOf","expirationDate","endOf","isBefore","isAfter","nameByIndex","isCountry","dataSource","assign","toDate","iso3166","Belfiore","CITIES_COUNTRIES","CF_NAME_MATCHER","CF_SURNAME_MATCHER","CF_FULL_NAME_MATCHER","YEAR_MATCHER","LEAP_YEAR_MATCHER","MONTH_MATCHER","DAY_29_MATCHER","DAY_30_MATCHER","DAY_31_MATCHER","DAY_MATCHER","MALE_DAY_MATCHER","FEMALE_DAY_MATCHER","MONTH_DAY_MATCHER","FULL_DATE_MATCHER","MALE_FULL_DATE_MATCHER","FEMALE_FULL_DATE_MATCHER","CITY_CODE_MATCHER","COUNTRY_CODE_MATCHER","BELFIORE_CODE_MATCHER","CODICE_FISCALE","PARTIAL_CF_NAME_MATCHER","PARTIAL_CF_FULL_NAME","PARTIAL_YEAR","PARTIAL_MONTH_DAY","PARTIAL_FULL_DATE","PARTIAL_BELFIORE_CODE_MATCHER","PARTIAL_CF","CONSONANT_LIST","VOWEL_LIST","OMOCODE_NUMBER_LIST","OMOCODE_NON_ZERO_NUMBER_LIST","OMOCODE_ZERO_LIST","MONTH_LIST","MONTH_30DAYS_LIST","MONTH_31DAYS_LIST","CITY_CODE_LIST","COUNTRY_CODE_LIST","CHECK_DIGIT","CONTROL_CODE_IN","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","CheckDigitizer","partialCF","split","char","isNumber","codiceFiscale","VALIDATOR","partialCfValue","evaluateChar","YEAR","MONTH","MONTH_DAY","HOURS","TIMEZONE","TIME","ISO8601_SHORT_DATE","ISO8601_DATE_TIME","DAY","LEAP_MONTH","DAYS_30_MONTHS","DAYS_31_MONTHS","MINUTES","SECONDS","MILLISECONDS","toArray","apply","_len","args","_key","OMOCODE","omocodeChar","Parser","replace","match","offset","OMOCODE_BITMAP","checkBitmap","Omocode","surnameCf","_ref2$","slicedToArray_default","cons","_ref3","_ref4$","vow","matchingLength","join","cfToSurname","birthDay","Gender","birthYear","current2DigitsYear","format","century","subtract","year","birthMonth","BirthMonth","cfToBirthDay","cfToBirthMonth","cfToBirthYear","dt","Date","UTC","isValid","birthPlace","birthDate","cfToBirthDate","validityCheck","isSameOrAfter","isSameOrBefore","fiscalCode","month","day","surname","cfToName","gender","cfToGender","place","cfToBirthPlace","trim","noDiacriticsSurname","DiacriticRemover","partialCf","padEnd","consonants","surnameToCf","parsedYear","genderValue","some","param","DATE_VALIDATOR","parsedDate","parseDate","cfYear","yearToCf","getFullYear","cfMonth","monthToCf","getMonth","cfDayGender","dayGenderToCf","getDate","targetDate","_args$filter","input","_args$filter2","active","findByName","results","searchByName","_this2","_ref5","dtParams","yearMonthDayToDate","nameToCf","dateGenderToCf","placeToCf","checkDigit","cf","cfValue","ERRORS","INVALID_SURNAME","INVALID_NAME","INVALID_DAY","INVALID_GENDER","INVALID_DAY_OR_GENDER","INVALID_YEAR","INVALID_DATE","Errors","className","methodName","entries","accumulator","_ref4","defineProperty_default","Validator","parsedDayM","matcherM","matcherF","cfDay","parsedDayGender","omocodeReplacer","parsedDateGender","parsedPlace","parsedCf","encodeCf","cfSurname","cfName","cfDateGender","cfPlace","diacriticRemover","LETTER_SET","matcherBy","ANY_LETTER","matchFromCf","charMatcher","insensitiveMatcher","diacriticsVowelList","diacriticsVowelMatcher","midDiacriticVowelMatcher","endingDiacritcVowelMatcher","divider","possibilities","toConsumableArray_default","diacriticizer","chars","diacriticsConsonantList","dateIso8601","toJSON","diff","centuries","nameMatcher","__webpack_exports__","belfiore_BelfioreConnector","birthMonth_enum","checkDigitizer","dateValidator_const","gender_enum","omocode_enum","parser","validator_const","validator"],"mappings":"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","file":"codice-fiscale-utils.amd.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 16);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;","module.exports = require(\"regenerator-runtime\");\n","var arrayWithHoles = require(\"./arrayWithHoles\");\n\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit\");\n\nvar nonIterableRest = require(\"./nonIterableRest\");\n\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}\n\nmodule.exports = _slicedToArray;","module.exports = __WEBPACK_EXTERNAL_MODULE__5__;","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nmodule.exports = _arrayWithHoles;","function _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nmodule.exports = _iterableToArrayLimit;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nmodule.exports = _nonIterableRest;","function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nmodule.exports = _arrayWithoutHoles;","function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nmodule.exports = _nonIterableSpread;","const MONTHS = [\n    'A',\n    'B',\n    'C',\n    'D',\n    'E',\n    'H',\n    'L',\n    'M',\n    'P',\n    'R',\n    'S',\n    'T'\n];\n/**\n * @namespace BirthMonth\n * @property {number} A 0\n * @property {number} B 1\n * @property {number} C 2\n * @property {number} D 3\n * @property {number} E 4\n * @property {number} H 5\n * @property {number} L 6\n * @property {number} M 7\n * @property {number} P 8\n * @property {number} R 9\n * @property {number} S 10\n * @property {number} T 11\n */\nexport default Object.freeze(new Proxy({ MONTHS }, {\n    get(receiver, name) {\n        if (typeof name  === 'string'){\n            const monthCode = name.toUpperCase();\n            if(receiver.MONTHS.includes(monthCode)) {\n                return receiver.MONTHS.indexOf(monthCode);\n            }\n        }\n        return this[name] || receiver.MONTHS[name] || receiver[name];\n    }\n}));","import CITIES_COUNTRIES from './asset/cities-countries.json';\nimport moment from 'moment';\n\n/**\n * Handler for cities and countries Dataset\n * \n * @namespace Belfiore\n */\nclass BelfioreConnector {\n    /**\n     * \n     * @param {Object} param Static json\n     * @param {Array<Array<Object>>} param.data Resource data\n     * @param {Array<Array<Object>>} param.licenses License array\n     * @constructor\n     * @private\n     */\n    constructor({ data, licenses, activeDate, codeMatcher, province }) {\n        if (codeMatcher && province) {\n            throw new Error('Both codeMatcher and province were provided to Bolfiore, only one is allowed');\n        }\n        const hiddenValueConf = value => ({\n            value,\n            enumerable: false,\n            configurable: false,\n            writable: false\n        });\n\n        Object.defineProperties(this, {\n            _data: hiddenValueConf(data),\n            _licenses: hiddenValueConf(licenses),\n            _activeDate: hiddenValueConf(activeDate),\n            _codeMatcher: hiddenValueConf(codeMatcher),\n            _province: hiddenValueConf(province)\n        });\n        return new Proxy(this, this.constructor);\n    }\n\n    /**\n     * @returns {Array<Object>} List of places\n     * @public\n     */\n    toArray() {\n        return this._data\n            .map(resource => Array.from(new Array(resource.belfioreCode.length / 3), (e, i) => this.constructor.locationByIndex(resource, i, {\n                activeDate: this._activeDate,\n                codeMatcher: this._codeMatcher,\n                province: this._province,\n                licenses: this._licenses\n            })))\n            .reduce((a, b) => a.concat(b))\n            .filter(e => !!e);\n    }\n\n    /**\n     * Search places matching given name\n     * @param {string} name Place name\n     * @returns {Array<Object>} List of places\n     * @public\n     */\n    searchByName(name) {\n        if (!name || typeof name !== 'string') {\n            return null;\n        }\n        let output = [];\n        for (let g = 0; g < this._data.length; g++) {\n            const resourceData = this._data[g];\n            const indexer = this.constructor.indexByName(resourceData.name, name);\n            for (let index of indexer) {\n                if (index >= 0) {\n                    const roundItem = this.constructor.locationByIndex(resourceData, index, {\n                        activeDate: this._activeDate,\n                        codeMatcher: this._codeMatcher,\n                        province: this._province,\n                        licenses: this._licenses\n                    });\n                    if (roundItem) {\n                        output.push(roundItem);\n                    }\n                }\n            }\n        }\n        return output;\n    }\n\n    /**\n     * Find place matching given name, retuns place object if provided name match only 1 result\n     * @param {string} name Place name\n     * @returns {Object|null}\n     * @public\n     */\n    findByName(name) {\n        if (!name || typeof name !== 'string') {\n            return null;\n        }\n        const matcher = new RegExp(`^${name}$`, 'i');\n        for (let g = 0; g < this._data.length; g++) {\n            const resourceData = this._data[g];\n            const indexer = this.constructor.indexByName(resourceData.name, matcher);\n            for (let index of indexer) {\n                if (index >= 0) {\n                    const roundItem = this.constructor.locationByIndex(resourceData, index, {\n                        activeDate: this._activeDate,\n                        codeMatcher: this._codeMatcher,\n                        province: this._province,\n                        licenses: this._licenses\n                    });\n                    if (roundItem) {\n                        return roundItem;\n                    }\n                }\n            }\n        }\n        return null;\n    }\n\n    /**\n     * Returns a Proxied version of Belfiore which filters results by given date\n     * @param {string|Date|Moment|Array<number>} [date = moment()] Target date to filter places active only for the given date\n     * @returns {BelfioreConnector} Belfiore instance filtered by active date\n     * @public\n     */\n    active(date = moment()) {\n        const { _data, _licenses, _codeMatcher, _province } = this;\n        return new BelfioreConnector({\n            data: _data,\n            licenses: _licenses,\n            activeDate: moment(date),\n            province: _province,\n            codeMatcher: _codeMatcher\n        });\n    }\n\n    /**\n     * Returns a Belfiore instance filtered by the given province\n     * @param {string} code Province Code (2 A-Z char)\n     * @returns {BelfioreConnector} Belfiore instance filtered by province code\n     * @public\n     */\n    byProvince(code) {\n        if (!(typeof code === 'string' && (/^[A-Z]{2}$/u).test(code))) {\n            return;\n        }\n        const { _data, _licenses, _activeDate } = this;\n        return new BelfioreConnector({\n            data: _data,\n            licenses: _licenses,\n            activeDate: _activeDate,\n            province: code\n        });\n    }\n\n    /**\n     * Returns a Proxied version of Belfiore which filters results by place type\n     * @readonly\n     * @returns {Belfiore} Belfiore instance filtered by cities\n     * @public\n     */\n    get cities() {\n        const { _data, _licenses, _activeDate } = this;\n        return new BelfioreConnector({\n            data: _data,\n            licenses: _licenses,\n            activeDate: _activeDate,\n            codeMatcher: /^[A-Y]/u\n        });\n    }\n\n    /**\n     * Returns a Proxied version of Belfiore which filters results by place type\n     * @readonly\n     * @returns {BelfioreConnector} Belfiore instance filtered by countries\n     * @public\n     */\n    get countries() {\n        const { _data, _licenses, _activeDate } = this;\n        return new BelfioreConnector({\n            data: _data,\n            licenses: _licenses,\n            activeDate: _activeDate,\n            codeMatcher: /^Z/u\n        });\n    }\n\n    /**\n     * Get Proxy\n     * @param {Object} resource target resource\n     * @param {string|number|Symbol} paramName property name to proxy\n     * @returns {*} Proxied property\n     * @private\n     */\n    static get (resource, paramName) {\n        if (typeof paramName  === 'string' && (/^[A-Z]\\d{3}$/iu).test(paramName)){\n            const base32name = this.belfioreToInt(paramName).toString(32).padStart(3, '0');\n            for (let g = 0; g < resource._data.length; g++) {\n                const resourceData = resource._data[g];\n                const index = this.binaryfindIndex(resourceData.belfioreCode, base32name);\n                if (index >= 0) {\n                    return this.locationByIndex(resourceData, index, {\n                        activeDate: resource._activeDate,\n                        codeMatcher: resource._codeMatcher,\n                        province: resource._province,\n                        licenses: resource._licenses\n                    });\n                }\n            }\n        }\n\n        if (\n            \n            (resource._codeMatcher || resource._province) &&\n                ['cities', 'countries'].includes(paramName)\n             ||\n            \n                paramName === 'byProvince' &&\n                (\n                    (resource._codeMatcher instanceof RegExp && resource._codeMatcher.test('Z000')) \n                    || resource._province\n                )\n            \n        ) {\n            return;\n        }\n\n        return resource[paramName];\n    }\n\n    /**\n     * Binary find Index (works ONLY in sorted arrays)\n     * @param {string} text Unique string of values of the same length (step)\n     * @param {string} value Exact text to find\n     * @param {number} start text start index for seeking the value\n     * @param {number} end text end index for seeking the value\n     * @param {number} step length of a single value to seek properly the text string\n     * @returns {number} Found value Index or -1 if not found\n     * @private\n     */\n    static binaryfindIndex(text, value, start, end) {\n        if (typeof text !== 'string' || !text.length) {\n            return -1;\n        }\n        const rangedStart = (!start || start < 0) ? 0 : start;\n        const rangedEnd = (!end || end >= text.length) ? (text.length - 1) : end;\n        const currentLength = rangedEnd - rangedStart + 1;\n        if (rangedStart > rangedEnd || currentLength % value.length) {\n            return -1;\n        }\n        const targetIndex = rangedStart + Math.floor(currentLength/(2*value.length))*value.length;\n        const targetValure = text.substr(targetIndex, value.length);\n        if (targetValure === value) {\n            return Math.ceil((targetIndex + 1) / value.length) -1;\n        }\n        const goAhead = value > targetValure;\n        return this.binaryfindIndex(text, value, goAhead ? targetIndex + value.length : rangedStart, goAhead ? rangedEnd : targetIndex - 1);\n    }\n\n    /**\n     * Converts belfiore code into an int\n     * @param {string} code Belfiore Code\n     * @returns {number} Int version of belfiore code\n     * @private\n     */\n    static belfioreToInt(code) {\n        const upperCaseCode = code.toUpperCase();\n        return (upperCaseCode.charCodeAt()-65)*10**3 + parseInt(upperCaseCode.substr(1));\n    }\n\n    /**\n     * Converts int to belfiore code\n     * @param {number} code Belfiore int code\n     * @returns {string} Standard belfiore code\n     * @private\n     */\n    static belfioreFromInt(code) {\n        return `${String.fromCharCode(Math.floor(code / 10**3) + 65)}${code.toString().substr(-3).padStart(3, '0')}`;\n    }\n\n    /**\n     * Converst Base 32 number of days since 01/01/1861 to Moment instance\n     * @param {string} base32daysFrom1861 Base 32 number of days from 1861-01-01\n     * @returns {Moment} Moment instance date\n     * @private\n     */\n    static decodeDate(base32daysFrom1861) {\n        return moment('1861-01-01').add(parseInt(base32daysFrom1861, 32) ,'days');\n    }\n\n    /**\n     * Retrieve string at index posizion\n     * @param {string} list concatenation of names\n     * @param {number} index target name index\n     * @returns {string} index-th string\n     * @private\n     */\n    static nameByIndex(list, index) {\n        if (typeof list !== 'string') {\n            throw new Error(`[BelfioreConnector.nameByIndex] Provided list is not a string`);\n        }\n        if (!list.length) {\n            throw new Error(`[BelfioreConnector.nameByIndex] Provided list empty`);\n        }\n        let startIndex = 0,\n            endIndex = list.indexOf('|', startIndex + 1),\n            counter = index;\n\n        while (counter > 0 && endIndex > startIndex) {\n            counter--;\n            startIndex = endIndex + 1;\n            endIndex = list.indexOf('|', startIndex + 1);\n        }\n        \n        if (index < 0 || counter > 0) {\n            throw new Error(`[BelfioreConnector.nameByIndex] Provided index ${index} is out range`);\n        }\n\n        if (!counter && endIndex < 0) {\n            return list.substring(startIndex);\n        }\n\n        return list.substring(startIndex, endIndex);\n    }\n\n    /**\n     * Retrieve string at index posizion\n     * @generator\n     * @param {string} list concatenation of names\n     * @param {string|RegExp} matcher target name index\n     * @yields {number} index\n     * @returns {number} -1 when Done\n     * @private\n     */\n    static* indexByName(list, matcher) {\n        if (typeof list !== 'string') {\n            throw new Error(`[BelfioreConnector.indexByName] Provided list is not a string`);\n        }\n        if (!list.length) {\n            throw new Error(`[BelfioreConnector.indexByName] Provided list empty`);\n        }\n        const regExpMatcher = typeof matcher === 'string' ? new RegExp(matcher, 'i') : matcher;\n        \n        if (!(regExpMatcher instanceof RegExp)) {\n            throw new Error(\"Provided matcher must be of type string or RegExp\");\n        }\n\n        const seekEntryEndIndex = index => list.indexOf('|', index +1) + 1 || list.length;\n        \n        for(let startIndex = 0, entryIndex = 0; startIndex < list.length; entryIndex++) {\n            const endIndex = seekEntryEndIndex(startIndex);\n            const targetName = list.substring(startIndex, endIndex -1);\n            if (regExpMatcher.test(targetName)) {\n                yield entryIndex;\n            }\n            // Moving to next entry to chgeck\n            startIndex = endIndex;\n        }\n        return -1;\n    }\n\n    /**\n     * Retrieve location for the given index in the given subset\n     * @param {string} resourceData concatenation of names\n     * @param {number} index target name index\n     * @returns {Object} location\n     * @private\n     */\n    static locationByIndex(resourceData, index, { activeDate, codeMatcher, province, licenses } = {}) {\n        const belfioreIndex = index * 3;\n        if (resourceData.belfioreCode.length - belfioreIndex < 3) {\n            return null;\n        }\n        const belFioreInt = parseInt(resourceData.belfioreCode.substr(belfioreIndex, 3), '32');\n        const belfioreCode = this.belfioreFromInt(belFioreInt);\n        if (codeMatcher && !codeMatcher.test(belfioreCode)) {\n            return null;\n        }\n        const code = resourceData.provinceOrCountry.substr(index * 2, 2);\n        if (province && province !== code) {\n            return null;\n        }\n\n        const dateIndex = index * 4;\n        const creationDate = this.decodeDate((resourceData.creationDate || '').substr(dateIndex, 4) || '0').startOf('day');\n        const expirationDate = this.decodeDate((resourceData.expirationDate || '').substr(dateIndex, 4) || '2qn13').endOf('day');\n        if (\n            activeDate && \n            (\n                resourceData.creationDate && activeDate.isBefore(creationDate, 'day') ||\n                resourceData.expirationDate &&  activeDate.isAfter(expirationDate, 'day')\n            )\n        ) {\n            return null;\n        }\n        const name = this.nameByIndex(resourceData.name, index);\n        const isCountry = belfioreCode[0] === 'Z';\n\n        const dataSource = licenses[parseInt(parseInt(resourceData.dataSource, 32).toString(2).padStart(resourceData.belfioreCode.length * 2/3, 0).substr(index * 2, 2), 2)];\n\n        return Object.assign({\n            belfioreCode,\n            name,\n            creationDate: creationDate.toDate(),\n            expirationDate: expirationDate.toDate(),\n            dataSource\n        }, isCountry ? {\n            iso3166: code\n        } : {\n            province: code\n        });\n    }\n}\n\nexport const Belfiore = new BelfioreConnector(CITIES_COUNTRIES);\nexport {BelfioreConnector};","const CONSONANT_LIST = 'B-DF-HJ-NP-TV-Z';\nconst VOWEL_LIST = 'AEIOU';\nconst OMOCODE_NUMBER_LIST = '\\\\dLMNP-V';\nconst OMOCODE_NON_ZERO_NUMBER_LIST = '1-9MNP-V';\nconst OMOCODE_ZERO_LIST = '0L';\nconst MONTH_LIST = 'A-EHLMPR-T';\nconst MONTH_30DAYS_LIST = 'DHPS';\nconst MONTH_31DAYS_LIST = 'ACELMRT';\nconst CITY_CODE_LIST = 'A-M';\nconst COUNTRY_CODE_LIST = 'Z';\n\nconst CF_NAME_MATCHER = `[A-Z][${VOWEL_LIST}][${VOWEL_LIST}X]|[${CONSONANT_LIST}]{2}[A-Z]`;\nconst CF_SURNAME_MATCHER = CF_NAME_MATCHER;\nconst CF_FULL_NAME_MATCHER = `(?:${CF_NAME_MATCHER}){2}`;\n\nconst YEAR_MATCHER = `[${OMOCODE_NUMBER_LIST}]{2}`;\nconst LEAP_YEAR_MATCHER = '[02468LNQSU][048LQU]|[13579MPRTV][26NS]';\nconst MONTH_MATCHER = `[${MONTH_LIST}]`;\nconst DAY_2X_MATCHER = '[26NS]';\nconst DAY_3X_MATCHER = '[37PT]';\nconst DAY_29_MATCHER = `[${OMOCODE_ZERO_LIST}4Q][${OMOCODE_NON_ZERO_NUMBER_LIST}]|[1256MNRS][${OMOCODE_NUMBER_LIST}]`;\nconst DAY_30_MATCHER = `[${DAY_3X_MATCHER}][${OMOCODE_ZERO_LIST}]`;\nconst DAY_31_MATCHER = `[${DAY_3X_MATCHER}][${OMOCODE_ZERO_LIST}1M]`;\n\nconst DAY_MATCHER = `(?:${DAY_29_MATCHER}|${DAY_3X_MATCHER}[${OMOCODE_ZERO_LIST}1M])`;\nconst MALE_DAY_MATCHER = `(?:[${OMOCODE_ZERO_LIST}][${OMOCODE_NON_ZERO_NUMBER_LIST}]|[12MN][${OMOCODE_NUMBER_LIST}]|[3P][${OMOCODE_ZERO_LIST}1M])`;\nconst FEMALE_DAY_MATCHER = `(?:[4Q][${OMOCODE_NON_ZERO_NUMBER_LIST}]|[56RS][${OMOCODE_NUMBER_LIST}]|[7T][${OMOCODE_ZERO_LIST}1M])`;\nconst MONTH_DAY_MATCHER = `${MONTH_MATCHER}(?:${DAY_29_MATCHER})|[${MONTH_30DAYS_LIST}]${DAY_30_MATCHER}|[${MONTH_31DAYS_LIST}]${DAY_31_MATCHER}`;\nconst FULL_DATE_MATCHER = `${YEAR_MATCHER}(?:${MONTH_MATCHER}(?:[${OMOCODE_ZERO_LIST}4Q][${OMOCODE_NON_ZERO_NUMBER_LIST}]|[15MR][${OMOCODE_NUMBER_LIST}]|${DAY_2X_MATCHER}[0-8LMNP-U])|[${MONTH_30DAYS_LIST}]${DAY_3X_MATCHER}[${OMOCODE_ZERO_LIST}]|[${MONTH_31DAYS_LIST}]${DAY_3X_MATCHER}[${OMOCODE_ZERO_LIST}1M]|[${MONTH_30DAYS_LIST}${MONTH_31DAYS_LIST}]${DAY_2X_MATCHER}[9V])|(?:${LEAP_YEAR_MATCHER})B${DAY_2X_MATCHER}[9V]`;\nconst MALE_FULL_DATE_MATCHER = `${YEAR_MATCHER}(?:${MONTH_MATCHER}(?:[${OMOCODE_ZERO_LIST}][${OMOCODE_NON_ZERO_NUMBER_LIST}]|[1M][${OMOCODE_NUMBER_LIST}]|[2N][0-8LMNP-U])|[${MONTH_30DAYS_LIST}][3P][${OMOCODE_ZERO_LIST}]|[${MONTH_31DAYS_LIST}][3P][${OMOCODE_ZERO_LIST}1M]|[${MONTH_30DAYS_LIST}${MONTH_31DAYS_LIST}][2N][9V])|(?:${LEAP_YEAR_MATCHER})B[2N][9V]`;\nconst FEMALE_FULL_DATE_MATCHER = `${YEAR_MATCHER}(?:${MONTH_MATCHER}(?:[4Q][${OMOCODE_NON_ZERO_NUMBER_LIST}]|[5R][${OMOCODE_NUMBER_LIST}]|[6S][0-8LMNP-U])|[${MONTH_30DAYS_LIST}][7T][${OMOCODE_ZERO_LIST}]|[${MONTH_31DAYS_LIST}][7T][${OMOCODE_ZERO_LIST}1M]|[${MONTH_30DAYS_LIST}${MONTH_31DAYS_LIST}][6S][9V])|(?:${LEAP_YEAR_MATCHER})B[6S][9V]`;\n\nconst CITY_CODE_MATCHER = `[${CITY_CODE_LIST}](?:[${OMOCODE_NON_ZERO_NUMBER_LIST}][${OMOCODE_NUMBER_LIST}]{2}|[${OMOCODE_ZERO_LIST}](?:[${OMOCODE_NON_ZERO_NUMBER_LIST}][${OMOCODE_NUMBER_LIST}]|[${OMOCODE_ZERO_LIST}][${OMOCODE_NON_ZERO_NUMBER_LIST}]))`;\nconst COUNTRY_CODE_MATCHER = `${COUNTRY_CODE_LIST}[${OMOCODE_NON_ZERO_NUMBER_LIST}][${OMOCODE_NUMBER_LIST}]{2}`;\nconst BELFIORE_CODE_MATCHER = `(?:[${CITY_CODE_LIST}${COUNTRY_CODE_LIST}][${OMOCODE_NON_ZERO_NUMBER_LIST}][${OMOCODE_NUMBER_LIST}]{2})|(?:[${CITY_CODE_LIST}][${OMOCODE_ZERO_LIST}](?:[${OMOCODE_NON_ZERO_NUMBER_LIST}][${OMOCODE_NUMBER_LIST}]|[${OMOCODE_ZERO_LIST}][${OMOCODE_NON_ZERO_NUMBER_LIST}]))`;\n\nconst CHECK_DIGIT = '[A-Z]';\n\nconst CODICE_FISCALE = `${CF_FULL_NAME_MATCHER}(?:${FULL_DATE_MATCHER})(?:${BELFIORE_CODE_MATCHER})${CHECK_DIGIT}`;\n\n\nconst PARTIAL_CF_NAME_MATCHER = `[A-Z][${VOWEL_LIST}]?|[${CONSONANT_LIST}]{1,2}`;\nconst PARTIAL_CF_FULL_NAME = `(?:${PARTIAL_CF_NAME_MATCHER})|(?:(?:${CF_NAME_MATCHER})(?:${PARTIAL_CF_NAME_MATCHER})?)`;\nconst PARTIAL_YEAR = `[${OMOCODE_NUMBER_LIST}]`;\nconst PARTIAL_MONTH_DAY = `${MONTH_MATCHER}[${OMOCODE_ZERO_LIST}12456MNQRS]?|[${MONTH_30DAYS_LIST}${MONTH_31DAYS_LIST}]${DAY_3X_MATCHER}`;\nconst PARTIAL_FULL_DATE =`${PARTIAL_YEAR}|(?:${YEAR_MATCHER}(?:${PARTIAL_MONTH_DAY})?)`;\nconst PARTIAL_BELFIORE_CODE_MATCHER = `[${CITY_CODE_LIST}${COUNTRY_CODE_LIST}](?:[${OMOCODE_NON_ZERO_NUMBER_LIST}][${OMOCODE_NUMBER_LIST}]?)?|[${COUNTRY_CODE_LIST}](?:[${OMOCODE_ZERO_LIST}][${OMOCODE_NUMBER_LIST}]?)?`;\n\nconst PARTIAL_CF = `${PARTIAL_CF_FULL_NAME}|(?:${CF_FULL_NAME_MATCHER}(?:(?:${PARTIAL_FULL_DATE})|(?:${FULL_DATE_MATCHER})(?:(?:${PARTIAL_BELFIORE_CODE_MATCHER})|(?:${BELFIORE_CODE_MATCHER})${CHECK_DIGIT}?)?)?)?`;\n\n/**\n * Validator constants\n * @readonly\n * @returns {Object} VALIDATOR\n * \n * @constant {string} VALIDATOR.CONSONANT_LIST List of consonant to be used in a RegExp\n * @constant {string} VALIDATOR.VOWEL_LIST List of vowels to be used in a RegExp\n * @constant {string} VALIDATOR.OMOCODE_NUMBER_LIST List of numbers and their omocode counterparts to be used in a RegExp\n * @constant {string} VALIDATOR.OMOCODE_NON_ZERO_NUMBER_LIST List of numbers but 0 and their omocode counterparts to be used in a RegExp\n * @constant {string} VALIDATOR.OMOCODE_ZERO_LIST List of 0 and its omocode counterpart to be used in a RegExp\n * @constant {string} VALIDATOR.MONTH_LIST\n * @constant {string} VALIDATOR.MONTH_30DAYS_LIST\n * @constant {string} VALIDATOR.MONTH_31DAYS_LIST\n * @constant {string} VALIDATOR.CITY_CODE_LIST\n * @constant {string} VALIDATOR.COUNTRY_CODE_LIST\n * @constant {string} VALIDATOR.CF_NAME_MATCHER\n * @constant {string} VALIDATOR.CF_SURNAME_MATCHER\n * @constant {string} VALIDATOR.CF_FULL_NAME_MATCHER\n * @constant {string} VALIDATOR.YEAR_MATCHER\n * @constant {string} VALIDATOR.LEAP_YEAR_MATCHER\n * @constant {string} VALIDATOR.MONTH_MATCHER\n * @constant {string} VALIDATOR.DAY_29_MATCHER\n * @constant {string} VALIDATOR.DAY_30_MATCHER\n * @constant {string} VALIDATOR.DAY_31_MATCHER\n * @constant {string} VALIDATOR.DAY_MATCHER\n * @constant {string} VALIDATOR.MALE_DAY_MATCHER\n * @constant {string} VALIDATOR.FEMALE_DAY_MATCHER\n * @constant {string} VALIDATOR.MONTH_DAY_MATCHER\n * @constant {string} VALIDATOR.FULL_DATE_MATCHER\n * @constant {string} VALIDATOR.MALE_FULL_DATE_MATCHER\n * @constant {string} VALIDATOR.FEMALE_FULL_DATE_MATCHER\n * @constant {string} VALIDATOR.CITY_CODE_MATCHER\n * @constant {string} VALIDATOR.COUNTRY_CODE_MATCHER\n * @constant {string} VALIDATOR.BELFIORE_CODE_MATCHER\n * @constant {string} VALIDATOR.CHECK_DIGIT\n * @constant {string} VALIDATOR.CODICE_FISCALE\n * @constant {string} VALIDATOR.PARTIAL_CF_NAME_MATCHER\n * @constant {string} VALIDATOR.PARTIAL_CF_FULL_NAME\n * @constant {string} VALIDATOR.PARTIAL_YEAR\n * @constant {string} VALIDATOR.PARTIAL_MONTH_DAY\n * @constant {string} VALIDATOR.PARTIAL_FULL_DATE\n * @constant {string} VALIDATOR.PARTIAL_BELFIORE_CODE_MATCHER\n * @constant {string} VALIDATOR.PARTIAL_CF\n * \n * @namespace VALIDATOR\n */\nexport default Object.freeze({\n    CONSONANT_LIST,\n    VOWEL_LIST,\n    OMOCODE_NUMBER_LIST,\n    OMOCODE_NON_ZERO_NUMBER_LIST,\n    OMOCODE_ZERO_LIST,\n    MONTH_LIST,\n    MONTH_30DAYS_LIST,\n    MONTH_31DAYS_LIST,\n    CITY_CODE_LIST,\n    COUNTRY_CODE_LIST,\n    CF_NAME_MATCHER,\n    CF_SURNAME_MATCHER,\n    CF_FULL_NAME_MATCHER,\n    YEAR_MATCHER,\n    LEAP_YEAR_MATCHER,\n    MONTH_MATCHER,\n    DAY_29_MATCHER,\n    DAY_30_MATCHER,\n    DAY_31_MATCHER,\n    DAY_MATCHER,\n    MALE_DAY_MATCHER,\n    FEMALE_DAY_MATCHER,\n    MONTH_DAY_MATCHER,\n    FULL_DATE_MATCHER,\n    MALE_FULL_DATE_MATCHER,\n    FEMALE_FULL_DATE_MATCHER,\n    CITY_CODE_MATCHER,\n    COUNTRY_CODE_MATCHER,\n    BELFIORE_CODE_MATCHER,\n    CHECK_DIGIT,\n    CODICE_FISCALE,\n    PARTIAL_CF_NAME_MATCHER,\n    PARTIAL_CF_FULL_NAME,\n    PARTIAL_YEAR,\n    PARTIAL_MONTH_DAY,\n    PARTIAL_FULL_DATE,\n    PARTIAL_BELFIORE_CODE_MATCHER,\n    PARTIAL_CF\n});","import VALIDATOR from './validator.const';\n\nconst CONTROL_CODE_IN = {\n    'A': 1,\n    'B': 0,\n    'C': 5,\n    'D': 7,\n    'E': 9,\n    'F': 13,\n    'G': 15,\n    'H': 17,\n    'I': 19,\n    'J': 21,\n    'K': 2,\n    'L': 4,\n    'M': 18,\n    'N': 20,\n    'O': 11,\n    'P': 3,\n    'Q': 6,\n    'R': 8,\n    'S': 12,\n    'T': 14,\n    'U': 16,\n    'V': 10,\n    'W': 22,\n    'X': 25,\n    'Y': 24,\n    'Z': 23\n};\n\n\n/**\n * CodiceFiscal 16th char check digit calculator\n * @class\n * @public\n *//**\n *\n * @namespace CheckDigitizer\n */\nclass CheckDigitizer {\n\n    /**\n     * Partial FiscalCode Evaluator\n     * @param {string} [partialCF=''] Partial Fiscal Code to evaluate\n     * @generator\n     * @yields {number} character value odd/even\n     * @returns {number} 0\n     * @public\n     */\n    static* evaluateChar(partialCF = '') {\n        for(let index in partialCF.split('')){\n            const char = partialCF[index].toUpperCase();\n            const isNumber = (/^\\d/u).test(char);\n            //Odd/Even are shifted/swapped (array starts from 0, 'Agenzia delle Entrate' documentation counts the string from 1)\n            if (index%2) {\n                //Odd positions\n                yield char.charCodeAt(0) - (isNumber ? 48 : 65);\n            } else {\n                //Even positions\n                yield CONTROL_CODE_IN[isNumber ? String.fromCharCode(parseInt(char) + 65) : char];\n            }\n        }\n        return 0;\n    }\n\n    /**\n     * Evaluate given partial CF to produce last check digit character\n     * @param {string} codiceFiscale Partial or complete Fiscal Code to evaluate to produce last character\n     * @returns {char|null} 16th CF char\n     * @public\n     */\n    static checkDigit(codiceFiscale) {\n        if (typeof codiceFiscale === 'string' && (new RegExp(VALIDATOR.PARTIAL_CF)).test(codiceFiscale)) {\n            const partialCF = codiceFiscale.substr(0, 15);\n            let partialCfValue = 0;\n            for (let charValue of this.evaluateChar(partialCF)) partialCfValue += charValue;\n            return String.fromCharCode(partialCfValue%26 + 65);\n        }\n        return null;\n    }\n}\n\nexport default CheckDigitizer;","const YEAR = '[12][0-9]{3}';\nconst MONTH = '0[1-9]|1[0-2]';\nconst DAY = '0[1-9]|[12][0-9]|3[01]';\nconst LEAP_MONTH = '02';\nconst DAYS_30_MONTHS = '0[469]|11';\nconst DAYS_31_MONTHS = '0[13578]|1[02]';\nconst MONTH_DAY = `(?:${MONTH})-(?:0[1-9]|[12]\\\\d)|(?:${DAYS_30_MONTHS})-30|(?:${DAYS_31_MONTHS})-3[01]`;\nconst HOURS = '[01]\\\\d|2[0-3]';\nconst MINUTES = '[0-5]\\\\d';\nconst SECONDS = MINUTES;\nconst MILLISECONDS = '\\\\d{3}';\nconst TIMEZONE = `Z|[-+](?:${HOURS})(?::?${MINUTES})?`;\nconst TIME = `(?:${HOURS})(?::${MINUTES}(?::${SECONDS}(\\\\.${MILLISECONDS})?)?(?:${TIMEZONE})?)?`;\nconst ISO8601_SHORT_DATE = `${YEAR}-(?:${MONTH_DAY})(?:T${TIME})?`;\nconst ISO8601_DATE_TIME = `${YEAR}(?:-(?:(?:${MONTH})|(?:${MONTH_DAY})(?:T${TIME})?))?`;\n\n/**\n * Date Validator propertys\n * @namespace DATE_VALIDATOR\n * @property {Object} DATE_VALIDATOR\n * @property {string} DATE_VALIDATOR.YEAR String matcher for ISO8601 4 digits year (limited to 1000-2999)\n * @property {string} DATE_VALIDATOR.MONTH String matcher for ISO8601 2 digits month (01-12)\n * @property {string} DATE_VALIDATOR.DAY String matcher for ISO8601 2 digits day (01-31)\n * @property {string} DATE_VALIDATOR.LEAP_MONTH String matcher for ISO8601 2 digits leap month\n * @property {string} DATE_VALIDATOR.DAYS_30_MONTHS String matcher for ISO8601 2 digits 30 days month\n * @property {string} DATE_VALIDATOR.DAYS_31_MONTHS String matcher for ISO8601 2 digits 31 days month\n * @property {string} DATE_VALIDATOR.MONTH_DAY String matcher for ISO8601 2 digits month + 2 digit day tailored for 28/29, 30 and 31 days months (##-##)\n * @property {string} DATE_VALIDATOR.ISO8601_SHORT_DATE String matcher for ISO8601 date: 4 digits year, 2 digits month and 2 digit day tailored for 28/29, 30 and 31 days months (####-##-##)\n * @property {string} DATE_VALIDATOR.HOURS String matcher for ISO8601 2 digits hours (00-23)\n * @property {string} DATE_VALIDATOR.MINUTES String matcher for ISO8601 2 digits minutes (00-59)\n * @property {string} DATE_VALIDATOR.SECONDS String matcher for ISO8601 2 digits seconds (00-59)\n * @property {string} DATE_VALIDATOR.MILLISECONDS String matcher for ISO8601 3 digits milliseconds (000-999)\n * @property {string} DATE_VALIDATOR.TIMEZONE String matcher for ISO8601 timezone (Z or ±## or ±##:## or ±####)\n * @property {string} DATE_VALIDATOR.TIME String matcher for ISO8601 for time (T## , T##:## , T##:##:## , T##:##:##.###)\n * @property {string} DATE_VALIDATOR.ISO8601_DATE_TIME String matcher for ISO8601 date/time format\n*/\nexport default Object.freeze({\n    YEAR,\n    MONTH,\n    DAY,\n    LEAP_MONTH,\n    DAYS_30_MONTHS,\n    DAYS_31_MONTHS,\n    MONTH_DAY,\n    ISO8601_SHORT_DATE,\n    HOURS,\n    MINUTES,\n    SECONDS,\n    MILLISECONDS,\n    TIMEZONE,\n    TIME,\n    ISO8601_DATE_TIME\n});","const GENDERS = {\n    M: 0,\n    F: 40\n};\n\n/**\n * @namespace Gender\n * @property {number} M 0\n * @property {number} F 40\n * @property {function({number})} parseNumberToGender\n */\nexport default Object.freeze(new Proxy(Object.assign({}, GENDERS), {\n    get(receiver, name) {\n        if (typeof name  === 'string') {\n            const index = parseInt(name);\n            const values = this.toArray.apply(receiver);\n            if (!isNaN(index) && (index >= 0 && index <= 31 || index >= 40 && index <= 71)) {\n                return values[Math.floor(index/40)];\n            }\n            if (typeof this[name] === 'function') {\n                return (...args) => this[name].apply(receiver, args);\n            }\n        }\n        return this[name] || receiver[name];\n    },\n\n    /**\n     * Return an array of Gender constants\n     *\n     * @returns {Array<string>} List of Gender keys\n     * @memberof Gender\n     */\n    toArray(){\n        return Object.keys(this);\n    }\n}));","const OMOCODE = [\n    'L',\n    'M',\n    'N',\n    'P',\n    'Q',\n    'R',\n    'S',\n    'T',\n    'U',\n    'V'\n];\n\n/**\n * @namespace Omocode\n * @returns {Proxy}\n * @property {number} L\n * @property {number} M\n * @property {number} N\n * @property {number} P\n * @property {number} Q\n * @property {number} R\n * @property {number} S\n * @property {number} T\n * @property {number} U\n * @property {number} V\n */\nexport default Object.freeze(new Proxy({ OMOCODE }, {\n    get(receiver, name) {\n        if(typeof name  === 'string'){\n            const omocodeChar = name.toUpperCase();\n            if (receiver.OMOCODE.includes(omocodeChar)) {\n                return receiver.OMOCODE.indexOf(omocodeChar);\n            }\n        }\n        return this[name] || receiver.OMOCODE[name] || receiver[name];\n    }\n}));","import {Belfiore} from './belfiore';\nimport BirthMonth from './birthMonth.enum';\nimport CheckDigitizer from './checkDigitizer';\nimport DATE_VALIDATOR from './dateValidator.const';\nimport DiacriticRemover from '@marketto/diacritic-remover';\nimport Gender from './gender.enum';\nimport moment from 'moment';\nimport Omocode from './omocode.enum';\nimport VALIDATOR from './validator.const';\n\n/**\n * @namespace Parser\n */\nclass Parser {\n\n    /**\n     * Default omocode bitmap\n     * @readonly\n     * @returns {number} Omocode bitmap number\n     * @public\n     */\n    static get OMOCODE_BITMAP(){\n        return 0b0111011011000000;\n    }\n\n    /**\n     * Parse surname information\n     * \n     * @param {string} codiceFiscale Partial or complete Omocode/Regular CF to parse\n     * @returns {string|null} Regular CF w/o omocodes chars\n     * @public\n     */\n    static cfDeomocode(codiceFiscale) {\n        if (typeof codiceFiscale !== 'string' || codiceFiscale.length < 7) {\n            return codiceFiscale;\n        }\n\n        const checkBitmap = offset => !!(2**offset & this.OMOCODE_BITMAP);\n\n        return codiceFiscale.replace(/[\\dA-Z]/giu, (match, offset) => (/^[A-Z]$/giu).test(match) && checkBitmap(offset) ? Omocode[match] : match);\n    }\n\n    /**\n     * Parse surname information\n     * \n     * @param {string} codiceFiscale Partial or complete CF to parse\n     * @returns {string|null} Partial/possible surname\n     * @public\n     */\n    static cfToSurname(codiceFiscale) {\n        if (typeof codiceFiscale !== 'string' || codiceFiscale.length < 3 || !(/^[A-Z]{3}/iu).test(codiceFiscale)) {\n            return null;\n        }\n\n        const surnameCf = codiceFiscale.substr(0,3);\n\n        const [cons = ''] = surnameCf.match(new RegExp(`^[${VALIDATOR.CONSONANT_LIST}]{1,3}`, 'ig')) || [];\n        const [vow = ''] = surnameCf.match(new RegExp(`[${VALIDATOR.VOWEL_LIST}]{1,3}`, 'ig')) || [];\n\n        const matchingLength = cons.length + vow.length;\n\n        if (matchingLength < 2 || matchingLength < 3 && surnameCf[2].toUpperCase() !== 'X') {\n            return null;\n        }\n\n        switch(cons.length) {\n        case 3:\n            return (cons + vow).split('').join('*') + '*';\n        case 2:\n            return `${cons[0]}${vow[0]}*${cons[1]}*`;\n        case 1:\n            return `${cons[0]}${vow}*`;\n        default:\n            return `${vow}${vow.length === 3 ? '*': ''}`;\n        }\n    }\n\n    /**\n     * Parse name information\n     * \n     * @param {string} codiceFiscale Partial or complete CF to parse\n     * @returns {string|null} Partial/possible name\n     * @public\n     */\n    static cfToName(codiceFiscale) {\n        if (typeof codiceFiscale !== 'string' || codiceFiscale.length < 3 || !(/^[A-Z]{6}/iu).test(codiceFiscale)) {\n            return null;\n        }\n        return this.cfToSurname(codiceFiscale.substr(3, 3));\n    }\n\n    /**\n     * Parse gender information\n     * \n     * @param {string} codiceFiscale Partial or complete CF to parse\n     * @returns {'M'|'F'|null} Male or female\n     * @public\n     */\n    static cfToGender(codiceFiscale) {\n        if (typeof codiceFiscale !== 'string' || codiceFiscale.length < 11) {\n            return null;\n        }\n        const birthDay = parseInt(codiceFiscale.substr(9,2));\n        if (birthDay === 0 || birthDay === 40) {\n            return null;\n        }\n        return Gender[birthDay];\n    }\n\n    /**\n     * Parse birth year information\n     * \n     * @param {string} codiceFiscale Partial or complete CF to parse\n     * @returns {number|null} Birth Year (4 digits)\n     * @public\n     */\n    static cfToBirthYear(codiceFiscale) {\n        if (typeof codiceFiscale !== 'string' || codiceFiscale.length < 8) {\n            return null;\n        }\n        const birthYear = parseInt(codiceFiscale.substr(6,2));\n\n        if (isNaN(birthYear)) {\n            return null;\n        }\n\n        const current2DigitsYear = parseInt(moment().format('YY'));\n\n        const century = (birthYear > current2DigitsYear) * 100;\n        return moment().subtract(current2DigitsYear - birthYear + century, 'years').year();\n    }\n\n    /**\n     * Parse birth month information\n     * \n     * @param {string} codiceFiscale Partial or complete CF to parse\n     * @returns {number|null} Birth Month (0...11 - Date notation)\n     * @public\n     */\n    static cfToBirthMonth(codiceFiscale) {\n        if (typeof codiceFiscale !== 'string' || codiceFiscale.length < 9) {\n            return null;\n        }\n\n        const birthMonth = BirthMonth[codiceFiscale.substr(8,1)];\n        if (!birthMonth && birthMonth !== 0) {\n            return null;\n        }\n        return birthMonth;\n    }\n\n    /**\n     * Parse birth day information\n     * \n     * @param {string} codiceFiscale Partial or complete CF to parse\n     * @returns {number|null} Birth day (1..31)\n     * @public\n     */\n    static cfToBirthDay(codiceFiscale) {\n        if (typeof codiceFiscale !== 'string' || codiceFiscale.length < 11) {\n            return null;\n        }\n        let birthDay = parseInt(codiceFiscale.substr(9,2));\n\n        if (isNaN(birthDay)) {\n            return null;\n        }\n\n        birthDay -= birthDay >= 40 ? 40 : 0;\n\n        if (birthDay < 1 || birthDay > 31) {\n            return null;\n        }\n        return birthDay;\n    }\n\n    /**\n     * Parse birth date information\n     * \n     * @param {string} codiceFiscale Partial or complete CF to parse\n     * @returns {Date|null} Birth Date\n     * @public\n     */\n    static cfToBirthDate(codiceFiscale) {\n        const birthDay = this.cfToBirthDay(codiceFiscale);\n        if (!birthDay) {\n            return null;\n        }\n\n        const birthMonth = this.cfToBirthMonth(codiceFiscale);\n        if (!birthMonth && birthMonth !== 0) {\n            return null;\n        }\n\n        const birthYear = this.cfToBirthYear(codiceFiscale);\n        if (!birthYear) {\n            return null;\n        }\n\n        const dt = moment(Date.UTC(birthYear, birthMonth, birthDay));\n        if (!dt.isValid()) {\n            return null;\n        }\n        return dt.toDate();\n    }\n\n    /**\n     * Parse birth place information\n     * \n     * @param {string} codiceFiscale Partial or complete CF to parse\n     * @returns {Object} {name, belfioreCode} Birth place\n     * @public\n     */\n    static cfToBirthPlace(codiceFiscale) {\n        if (typeof codiceFiscale !== 'string' || codiceFiscale.length < 15) {\n            return null;\n        }\n\n\n        const birthPlace = Belfiore[codiceFiscale.substr(11,4).toUpperCase()];\n        if (!birthPlace) {\n            return null;\n        }\n\n        const {creationDate, expirationDate} = birthPlace;\n        if (creationDate || expirationDate) {\n            const birthDate = this.cfToBirthDate(codiceFiscale);\n            if (!birthDate) {\n                return null;\n            }\n            let validityCheck = true;\n            if (creationDate) {\n                validityCheck = moment(birthDate).isSameOrAfter(moment(creationDate));\n            }\n            if(validityCheck && expirationDate) {\n                validityCheck = moment(birthDate).isSameOrBefore(moment(expirationDate));\n            }\n            if (!validityCheck) {\n                return null;\n            }\n        }\n        return birthPlace;\n    }\n\n    /**\n     * @param {string} fiscalCode 16 character Codice Fiscale to decode\n     * @returns {Object} {surname, name, year, month, day, gender, place} Decoded CF Info\n     */\n    static cfDecode(fiscalCode) {\n        const year = this.cfToBirthYear(fiscalCode),\n            month = this.cfToBirthMonth(fiscalCode),\n            day = this.cfToBirthDay(fiscalCode);\n        return {\n            surname: this.cfToSurname(fiscalCode),\n            name: this.cfToName(fiscalCode),\n\n            year,\n            month,\n            day,\n            date: new Date(Date.UTC(year, month, day)),\n\n            gender: this.cfToGender(fiscalCode),\n            place: (this.cfToBirthPlace(fiscalCode) || {}).name\n        };\n    }\n\n    /**\n     * Parse surname to cf part\n     * \n     * @param {string} surname Partial or complete CF to parse\n     * @returns {string|null} partial cf\n     * @public\n     */\n    static surnameToCf(surname) {\n        if ((surname || '').trim().length < 2) {\n            return null;\n        }\n        const diacriticRemover = new DiacriticRemover();\n        const noDiacriticsSurname = diacriticRemover.replace(surname).trim();\n        if (!(/^[A-Z ']+$/iu).test(noDiacriticsSurname)) {\n            return null;\n        }\n        const consonants = (noDiacriticsSurname.match(new RegExp(`[${VALIDATOR.CONSONANT_LIST}]+`, 'ig')) || []).join('');\n        const vowels = (noDiacriticsSurname.match(new RegExp(`[${VALIDATOR.VOWEL_LIST}]+`, 'ig')) || []).join('');\n\n        const partialCf = (consonants + vowels).padEnd(3, 'X').substr(0, 3);\n\n        if (partialCf.length < 3) {\n            return null;\n        }\n        return partialCf.toUpperCase();\n    }\n\n    /**\n     * Parse name to cf part\n     * \n     * @param {string} name Partial or complete CF to parse\n     * @returns {string|null} partial cf\n     * @public\n     */\n    static nameToCf(name) {\n        if ((name || '').trim().length < 2) {\n            return null;\n        }\n        \n        const diacriticRemover = new DiacriticRemover();\n        const noDiacriticsName = diacriticRemover.replace(name);\n        const consonants = (noDiacriticsName.match(new RegExp(`[${VALIDATOR.CONSONANT_LIST}]+`, 'ig')) || []).join('');\n\n        if (consonants.length >= 4) {\n            return (consonants[0] + consonants.substr(2, 2)).toUpperCase();\n        }\n        return this.surnameToCf(name);\n    }\n\n    /**\n     * Parse year to cf part\n     * \n     * @param {string|number} year Birth year 2 or 4 digit string, number above 19XX or below 100\n     * @returns {string|null} partial cf\n     * @public\n     */\n    static yearToCf(year) {\n        let parsedYear = year;\n        if (typeof year === 'string') {\n            parsedYear = parseInt(year);\n        }\n        if (!(typeof parsedYear === 'number' && !isNaN(parsedYear) &&(parsedYear >= 1900 || parsedYear < 100))) {\n            return null;\n        }\n        return `0${parsedYear}`.substr(-2);\n    }\n\n    /**\n     * Parse month information\n     * \n     * @param {number} month Month number 0..11\n     * @returns {string|null} Birth Month CF code\n     * @public\n     */\n    static monthToCf(month) {\n        if (!(typeof month === 'number' && !isNaN(month))) {\n            return null;\n        }\n\n        return BirthMonth[month] || null;\n    }\n\n    /**\n     * Parse day information\n     * \n     * @param {number} day Day number 1..31\n     * @param {Gender|string} gender Gender enum value\n     * @returns {string|null} Birth Day CF code\n     * @public\n     */\n    static dayGenderToCf(day, gender) {\n        if (!(typeof day === 'number' && !isNaN(day) && (day > 0 && day < 32))) {\n            return null;\n        }\n        const genderValue = Gender[gender];\n        if (typeof genderValue !== 'number') {\n            return null;\n        }\n        return `0${day + genderValue}`.substr(-2);\n    }\n\n    /**\n     * Parse Year, Month, Day to Dated\n     * \n     * @param {number} year 4 digits Year\n     * @param {number} [month = 0] 1 or 2 digits Month 0..11\n     * @param {number} [day = 1] 1,2 digits Day 1..31\n     * @returns {Date|null} Date or null if provided year/month/day are not valid\n     */\n    static yearMonthDayToDate(year, month = 0, day = 1) {\n        if ([year, month, day].some(param => typeof param !== 'number') || year < 1861) {\n            return null;\n        }\n        const date = moment(Date.UTC(year, month, day));\n        if (!date.isValid() || date.year() !== year || date.month() !== month || date.date() !== day) {\n            return null;\n        }\n        return date.toDate();\n    }\n\n    /**\n     * Parse a Dated and Gender information to create Date/Gender CF part\n     * \n     * @param {Date|Moment|string|Array<number>} date Date or Moment instance, ISO8601 date string or array of numbers [year, month, day]\n     * @returns {Date|null} Parsed Date or null if not valid\n     * @public\n     */\n    static parseDate(date) {\n        if (!(\n            date instanceof Date ||\n            date instanceof moment ||\n            typeof date === 'string' && (new RegExp(DATE_VALIDATOR.ISO8601_SHORT_DATE)).test(date) ||\n            Array.isArray(date) && !date.some(value => typeof value !== 'number')\n        )) {\n            return null;\n        }\n\n        const parsedDate = moment(date);\n        if (!parsedDate.isValid()){\n            return null;\n        }\n        return parsedDate.toDate();\n    }\n\n    /**\n     * Parse a Dated and Gender information to create Date/Gender CF part\n     * \n     * @param {Date|Moment|string|Array<number>} date Date or Moment instance, ISO8601 date string or array of numbers [year, month, day]\n     * @param {Gender|string} gender Gender enum value\n     * @returns {string|null} Birth date and Gender CF code\n     * @public\n     */\n    static dateGenderToCf(date, gender) {\n        if (!Gender.hasOwnProperty(gender)) {\n            return null;\n        }\n        const parsedDate = this.parseDate(date);\n        if (!parsedDate) {\n            return null;\n        }\n        \n        const cfYear = this.yearToCf(parsedDate.getFullYear());\n        const cfMonth = this.monthToCf(parsedDate.getMonth());\n        const cfDayGender = this.dayGenderToCf(parsedDate.getDate(), gender);\n\n        return `${cfYear}${cfMonth}${cfDayGender}`;\n    }\n\n    /**\n     * Parse a Dated and Gender information to create Date/Gender CF part\n     * \n     * @param {Date|Moment|string|Array<number>} date Date or Moment instance, ISO8601 date string or array of numbers [year, month, day]\n     * @param {string} name City or Country name\n     * @param {string} [province] Province code for cities\n     * @returns {string|null} Matching place belfiore code, if only once is matching criteria\n     * @public\n     *//**\n     * Parse place name and province to Belfiore code\n     * @param {string} name City or Country name\n     * @param {string} [province] Province code for cities\n     * @returns {string|null} Matching place belfiore code, if only once is matching criteria\n     * @public\n     */\n    static placeToCf(...args) {\n        let targetDate = this.parseDate(args[0]);\n\n        let [name, province] = args.filter(input => typeof input === 'string');\n        if (!province) {\n            return (Belfiore.active(targetDate).findByName(name) || {}).belfioreCode;\n        }\n        const results = Belfiore.searchByName(name).toArray().filter(place => province.trim().toUpperCase() === place.province);\n        if (results.length === 1) {\n            return results[0].belfioreCode;\n        }\n        return null;\n    }\n\n    /**\n     * Generates full CF\n     * \n     * @param {Object} input Input Object\n     * @param {string} input.surname Surname\n     * @param {string} input.name Name\n     * @param {number} [input.year] Birth Year\n     * @param {number} [input.month] Birth Month\n     * @param {number} [input.day] Birth Day\n     * @param {Date|Moment} [input.date] Birth Date\n     * @param {Gender|string} input.gender Gender M|F\n     * @param {string} input.place Place name\n     * @returns {string|null} Complete CF\n     */\n    static encodeCf({\n        surname,\n        name,\n\n        year,\n        month,\n        day,\n        date,\n\n        gender,\n        place\n    }) {\n        const dtParams = this.parseDate(date) || this.yearMonthDayToDate(year, month, day);\n        const generator = [\n            () => this.surnameToCf(surname),\n            () => this.nameToCf(name),\n            () => this.dateGenderToCf(dtParams, gender),\n            () => this.placeToCf(dtParams, place),\n            () => CheckDigitizer.checkDigit(cf)\n        ];\n        let cf = '';\n        for (let i=0; i<generator.length; i++) {\n            const cfValue = generator[i]();\n            if (!cfValue) {\n                return null;\n            }\n            cf += cfValue;\n        }\n\n        return cf;\n    }\n}\n\nexport default Parser;","const ERRORS = Object.freeze({\n    INVALID_SURNAME: 'Provided surname is not valid, only letters, diacritics and apostrophe allowed',\n    INVALID_NAME: 'Provided name is not valid, only letters, diacritics and apostrophe allowed',\n    INVALID_DAY: 'Provided day is not valid',\n    INVALID_GENDER: 'Provided gender is not valid',\n    INVALID_DAY_OR_GENDER: 'Provided day and/or gender are not valid',\n    INVALID_YEAR: 'Provided year is not valid, only 2 or 4 digit numbers are allowed',\n    INVALID_DATE: 'Provided date is not valid',\n});\n\nclass Errors {\n    /**\n     * \n     * @param {string} className \n     * @param {string} methodName \n     */\n    constructor(className, methodName) {\n        Object.assign(\n            this,\n            Object.entries(ERRORS)\n                .map(([key, name]) => [key, new Error(`[${className}.${methodName}] ${name}`)])\n                .reduce((accumulator, [key, err]) => Object.assign(accumulator, { [key]: err }), {})\n        );\n    }\n}\n\nexport default Errors;","import CheckDigitizer from './checkDigitizer';\nimport DATE_VALIDATOR from './dateValidator.const';\nimport DiacriticRemover from '@marketto/diacritic-remover';\nimport Gender from './gender.enum';\nimport moment from 'moment';\nimport Omocode from './omocode.enum';\nimport Parser from './parser';\nimport VALIDATOR from './validator.const';\nimport Error from './error';\n/**\n * @namespace Validator\n */\nclass Validator {\n\n    /**\n     * Validation regexp for the given surname or generic\n     * @param {string} surname Optional surname to generate validation regexp\n     * @returns {RegExp} CF Surname matcher\n     * @public\n     */\n    static cfSurname(surname) {\n        const error =  new Error('Validator', 'cfSurname');\n        let matcher = VALIDATOR.CF_NAME_MATCHER;\n        if (surname) {\n            if (!this.surname().test(surname)) {\n                throw error.INVALID_SURNAME;\n            }\n            matcher = Parser.surnameToCf(surname) || matcher;\n        }\n        return new RegExp(`^(?:${matcher})$`, 'iu');\n    }\n\n    /**\n     * Validation regexp for the given name or generic\n     * @param {string} name Optional name to generate validation regexp\n     * @returns {RegExp} CF name matcher\n     * @public\n     */\n    static cfName(name) {\n        const error =  new Error('Validator', 'cfName');\n        let matcher = VALIDATOR.CF_NAME_MATCHER;\n        if (name) {\n            if (!this.surname().test(name)) {\n                throw error.INVALID_NAME;\n            }\n            matcher = Parser.nameToCf(name) || matcher;\n        }\n        return new RegExp(`^${matcher}$`, 'iu');\n    }\n\n    /**\n     * Validation regexp for the given year or generic\n     * @param {number} year Optional year to generate validation regexp\n     * @returns {RegExp} CF year matcher\n     * @public\n     */\n    static cfYear(year) {\n        const error =  new Error(this.constructor.name, 'cfYear');\n        let matcher = VALIDATOR.YEAR_MATCHER;\n        if (year) {\n            const parsedYear = Parser.yearToCf(year);\n            if (parsedYear) {\n                matcher = parsedYear.replace(/\\d/gu, n => `[${n}${Omocode[n]}]`);\n            } else {\n                throw error.INVALID_YEAR;\n            }\n        }\n        return new RegExp(`^${matcher}$`, 'iu');\n    }\n\n    /**\n     * Validation regexp for the given month or generic\n     * @param {number} month Optional month to generate validation regexp\n     * @returns {RegExp} CF month matcher\n     * @public\n     */\n    static cfMonth(month) {\n        let matcher = VALIDATOR.MONTH_MATCHER;\n        if (month) {\n            matcher = Parser.monthToCf(month) || matcher;\n        }\n        return new RegExp(`^${matcher}$`, 'iu');\n    }\n\n    /**\n     * Validation regexp for the given year or generic\n     * @param {number} day Optional day to generate validation regexp\n     * @returns {RegExp} CF day matcher\n     * @public\n     */\n    static cfDay(day) {\n        const error =  new Error('Validator', 'cfDayGender');\n        let matcher = VALIDATOR.DAY_MATCHER;\n        if (day) {\n            const parsedDayM = Parser.dayGenderToCf(day, 'M');\n            if (parsedDayM) {\n                const matcherM = parsedDayM.replace(/\\d/gu, n => `[${n}${Omocode[n]}]`);\n                const matcherF = Parser.dayGenderToCf(day, 'F').replace(/\\d/gu, n => `[${n}${Omocode[n]}]`);\n                matcher = `(?:${matcherM})|(?:${matcherF})`;\n            } else {\n                throw error.INVALID_DAY;\n            }\n        }\n        return new RegExp(`^${matcher}$`, 'iu');\n    }\n\n    /**\n     * Validation regexp for the given year or generic\n     * @param {number|null} [day] Optional day to generate validation regexp\n     * @param {'M'|'F'} [gender] Gender @see Gender\n     * @returns {RegExp} CF day and gender matcher\n     * @public\n     */\n    static cfDayGender(day, gender) {\n        const error =  new Error('Validator', 'cfDayGender');\n        if (!gender) {\n            return this.cfDay(day);\n        }\n        let matcher;\n        if (day) {\n            const parsedDayGender = Parser.dayGenderToCf(day, gender);\n            if (parsedDayGender) {\n                matcher = parsedDayGender.replace(/\\d/gu, n => `[${n}${Omocode[n]}]`);\n            } else {\n                throw error.INVALID_DAY_OR_GENDER;\n            }\n        } else {\n            switch (gender) {\n            case 'M':\n                matcher = VALIDATOR.MALE_DAY_MATCHER;\n                break;\n            case 'F':\n                matcher = VALIDATOR.FEMALE_DAY_MATCHER;\n                break;\n            default:\n                throw error.INVALID_GENDER;\n            }\n        }\n        return new RegExp(`^${matcher}$`, 'iu');\n    }\n\n    /**\n     * Validation regexp for the given year or generic\n     * @param {Date|Moment|Array<number>} date Optional date to generate validation regexp\n     * @param {'M'|'F'} [gender] @see Gender\n     * @returns {RegExp} CF date and gender matcher\n     * @public\n     */\n    static cfDateGender(date, gender) {\n        const error =  new Error('Validator', 'cfDateGender');\n        if (date && !Parser.parseDate(date)) {\n            throw error.INVALID_DATE;\n        }\n        if (gender && !Gender.toArray().includes(gender)) {\n            throw error.INVALID_GENDER;\n        }\n        let matcher = VALIDATOR.FULL_DATE_MATCHER;\n        if (date) {\n            const omocodeReplacer = parsedDateGender => parsedDateGender.replace(/\\d/gu, n => `[${n}${Omocode[n]}]`);\n            matcher = gender ?\n                omocodeReplacer(Parser.dateGenderToCf(date, gender)) :\n                `(?:${omocodeReplacer(Parser.dateGenderToCf(date, 'M'))}|${omocodeReplacer(Parser.dateGenderToCf(date, 'm'))})`;\n        } else {\n            switch (gender) {\n            case 'M':\n                matcher = VALIDATOR.MALE_FULL_DATE_MATCHER;\n                break;\n            case 'F':\n                matcher = VALIDATOR.FEMALE_FULL_DATE_MATCHER;\n                break;\n            }\n        }\n        return new RegExp(`^${matcher}$`, 'iu');\n    }\n\n    /**\n     * @param {string} placeName Optional place name to generate validation regexp\n     * @returns {RegExp} CF place matcher\n     * @public\n     *//**\n     * @param {Date|Moment|Array<number>} [date] Optional date to generate validation regexp\n     * @param {string} placeName Optional place name to generate validation regexp\n     * @returns {RegExp} CF place matcher\n     * @public\n     */\n    static cfPlace(...args) {\n        let matcher = VALIDATOR.BELFIORE_CODE_MATCHER;\n        if (args.filter(param => !!param).length > moment(args[0]).isValid()) {\n            const parsedPlace = Parser.placeToCf(...args);\n            if (parsedPlace) {\n                matcher = parsedPlace.replace(/\\d/gu, n => `[${n}${Omocode[n]}]`);\n            } else {\n                matcher = '';\n            }\n        }\n        return new RegExp(`^${matcher}$`, 'iu');\n    }\n\n    /**\n     * Generates full CF validator based on given optional input or generic\n     * \n     * @param {Object} input Input Object\n     * @param {string} input.surname Surname\n     * @param {string} input.name Name\n     * @param {number} [input.year] Birth Year\n     * @param {number} [input.month] Birth Month\n     * @param {number} [input.day] Birth Day\n     * @param {Date|Moment} [input.date] Birth Date\n     * @param {Gender|string} input.gender Gender M|F\n     * @param {string} input.place Place name\n     * @returns {RegExp} CodiceFiscale matcher\n     */\n    static codiceFiscale(input) {\n        let matcher = VALIDATOR.CODICE_FISCALE;\n        if (input) {\n            const parsedCf = Parser.encodeCf(input);\n\n            if (parsedCf) {\n                matcher = parsedCf.replace(/\\d/gu, n => `[${n}${Omocode[n]}]`);\n            } else {\n                const { surname, name, year, month, day, date, gender, place } = input;\n                if (surname || name || year || month || day || date || gender || place) {\n                    const dtParams = Parser.parseDate(date) || Parser.yearMonthDayToDate(year, month, day);\n                    const generator = [\n                        () => this.cfSurname(surname),\n                        () => this.cfName(name),\n                        () => this.cfDateGender(dtParams, gender),\n                        () => this.cfPlace(dtParams, place)\n                    ];\n\n                    matcher = '';\n                    for (let i=0; i<generator.length; i++) {\n                        const cfPartValidator = generator[i]();\n                        const cfValue = cfPartValidator.toString().match(/\\^(.+)\\$/)[1];\n                        matcher += `(?:${cfValue})`;\n                    }\n                    // Final addition of CheckDigit\n                    matcher += VALIDATOR.CHECK_DIGIT;\n                }\n            }\n        }\n        return new RegExp(`^${matcher}$`, 'iu');\n    }\n\n\n    /**\n     * Returns surname validator based on given cf or generic\n     * \n     * @param {string} codiceFiscale Partial or complete CF to parse\n     * @returns {RegExp} Generic or specific regular expression\n     * @public\n     */\n    static surname(codiceFiscale) {\n        const diacriticRemover = new DiacriticRemover();\n        const LETTER_SET = `[A-Z${diacriticRemover.matcherBy(/^[A-Z]$/ui)}]`;\n        const SEPARATOR_SET = '[\\' ]';\n        const ANY_LETTER = `(?:${LETTER_SET}+${SEPARATOR_SET}?)`;\n        let matcher = `${ANY_LETTER}+`;\n        if (typeof codiceFiscale === 'string' && (/^[A-Z]{1,3}/iu).test(codiceFiscale)) {\n            const surnameCf = codiceFiscale.substr(0,3);\n            \n            const diacriticizer = matchingChars => (matchingChars || '').split('').map(char => `[${diacriticRemover.insensitiveMatcher[char]}]`);\n\n            const matchFromCf = (cf, charMatcher) => diacriticizer((cf.match(new RegExp(charMatcher, 'ig')) || [])[0]);\n\n            const cons = matchFromCf(surnameCf, `^[${VALIDATOR.CONSONANT_LIST}]{1,3}`);\n            const vow = matchFromCf(surnameCf, `[${VALIDATOR.VOWEL_LIST}]{1,3}`);\n            \n            const diacriticsVowelList = VALIDATOR.VOWEL_LIST + diacriticRemover.matcherBy(new RegExp(`^[${VALIDATOR.VOWEL_LIST}]$`, 'ui'));\n            const diacriticsVowelMatcher = `[${diacriticsVowelList}]`;\n            const midDiacriticVowelMatcher = `(?:${diacriticsVowelMatcher}${SEPARATOR_SET}?)*`;\n            const endingDiacritcVowelMatcher = `(?:${SEPARATOR_SET}?${midDiacriticVowelMatcher}${diacriticsVowelMatcher})?`;\n            switch(cons.length) {\n            case 3: {\n                const divider = midDiacriticVowelMatcher;\n                matcher = divider + cons.join(`${SEPARATOR_SET}?${divider}`) + `(?:${SEPARATOR_SET}?${LETTER_SET}*${LETTER_SET})?`;\n                break;\n            }\n            case 2: {\n                const possibilities = [\n                    `${vow[0]}${SEPARATOR_SET}?${cons[0]}${midDiacriticVowelMatcher}${cons[1]}`,\n                    `${cons[0]}${SEPARATOR_SET}?` + vow.join(`${SEPARATOR_SET}?`) + `${SEPARATOR_SET}?${midDiacriticVowelMatcher}${cons[1]}`,\n                    cons.join(`${SEPARATOR_SET}?`) + `${SEPARATOR_SET}?${vow[0]}`\n                ];\n                matcher = `(?:${possibilities.join('|')})${endingDiacritcVowelMatcher}`;\n                break;\n            }\n            case 1: {\n                const possibilities = [\n                    vow.slice(0,2).join(`${SEPARATOR_SET}?`) + midDiacriticVowelMatcher + cons.join(`${SEPARATOR_SET}?`),\n                    `${vow[0]}${SEPARATOR_SET}?` + cons.join(`${SEPARATOR_SET}?`) + vow[1],\n                    [cons[0], ...vow.slice(0,2)].join(`${SEPARATOR_SET}?`)\n                ];\n                matcher = `(?:${possibilities.join('|')})${endingDiacritcVowelMatcher}`;\n                break;\n            }\n            default:\n                matcher = `${vow.join(`${SEPARATOR_SET}?`)}${endingDiacritcVowelMatcher}`;\n            }\n        }\n\n        return new RegExp(`^ *(${matcher}) *$`, 'iu');\n    }\n\n    /**\n     * Returns name validator based on given cf or generic\n     * \n     * @param {string} codiceFiscale Partial or complete CF to parse\n     * @returns {RegExp} Generic or specific regular expression\n     * @public\n     */\n    static name(codiceFiscale) {\n        if (typeof codiceFiscale === 'string' && (new RegExp(`^[A-Z]{3}[${VALIDATOR.CONSONANT_LIST}]{3}`, 'iu')).test(codiceFiscale)) {\n            const diacriticRemover = new DiacriticRemover();\n            const ANY_LETTER = `[A-Z${diacriticRemover.matcherBy(/^[A-Z]$/ui)}]`;\n\n            const nameCf = codiceFiscale.substr(3,3);\n\n            const cons = ((nameCf.match(new RegExp(`^[${VALIDATOR.CONSONANT_LIST}]{1,3}`, 'ig')) || [])[0] || '')\n                .split('').map(char => `[${diacriticRemover.insensitiveMatcher[char]}]`);\n\n            const diacriticizer = chars => chars + diacriticRemover.matcherBy(new RegExp(`^[${chars}]$`, 'ui'));\n\n            const diacriticsVowelList = diacriticizer(VALIDATOR.VOWEL_LIST);\n            const diacriticsConsonantList = diacriticizer(VALIDATOR.CONSONANT_LIST);\n\n            const matcher = `[${diacriticsVowelList}]*${cons[0]}[${diacriticsVowelList}]*(?:[${diacriticsConsonantList}][${diacriticsVowelList}]*)?`\n                + cons.slice(1,3).join(`[${diacriticsVowelList}]*`) + `${ANY_LETTER}*`;\n            \n            return new RegExp(`^${matcher}$`, 'iu');\n        }\n        return this.surname((codiceFiscale || '').substr(3,3));\n    }\n\n    /**\n     * Returns iso8601 date validator based on given cf or generic\n     * \n     * @param {string} codiceFiscale Partial or complete CF to parse\n     * @returns {RegExp} Generic or specific regular expression\n     * @public\n     */\n    static date(codiceFiscale){\n        let matcher = DATE_VALIDATOR.ISO8601_DATE_TIME;\n        if (codiceFiscale) {\n            const parsedDate = Parser.cfToBirthDate(codiceFiscale);\n            if (parsedDate) {\n                const dateIso8601 = parsedDate.toJSON();\n                if (moment().diff(moment(parsedDate), 'y') < 50) {\n                    const century = parseInt(dateIso8601.substr(0,2));\n                    const centuries = [\n                        century -1,\n                        century\n                    ].map(year => year.toString().padStart(2, 0));\n                    matcher = `(?:${centuries.join('|')})` + dateIso8601.substr(2,8);\n                } else {\n                    matcher = dateIso8601.substr(0,10);\n                }\n            }\n        }\n        return new RegExp(`^${matcher}(?:T${DATE_VALIDATOR.TIME}(?:${DATE_VALIDATOR.TIMEZONE})?)?$`, 'iu');\n    }\n\n    /**\n     * Returns gender validator based on given cf or generic\n     * \n     * @param {string} codiceFiscale Partial or complete CF to parse\n     * @returns {RegExp} Generic or specific regular expression\n     * @public\n     */\n    static gender(codiceFiscale) {\n        const parsedGender = Parser.cfToGender(codiceFiscale);\n        const matcher = parsedGender || `[${Gender.toArray().join('')}]`;\n        return new RegExp(`^${matcher}$`, 'u');\n    }\n\n    \n\n    /**\n     * Returns place validator based on given cf or generic\n     * \n     * @param {string} codiceFiscale Partial or complete CF to parse\n     * @returns {RegExp} Generic or specific regular expression\n     * @public\n     */\n    static place(codiceFiscale) {\n        let matcher = '.+';\n        const parsedPlace = Parser.cfToBirthPlace(codiceFiscale);\n\n        if (parsedPlace) {\n            const diacriticRemover = new DiacriticRemover();\n            const nameMatcher = parsedPlace.name.replace(/./gu, c => diacriticRemover[c]===c ? c : `[${c}${diacriticRemover[c]}]`);\n            matcher = `(?:(?:${nameMatcher})|${parsedPlace.belfioreCode})`;\n        }\n\n        return new RegExp(`^${matcher}$`, 'ui');\n    }\n\n    /**\n     * Check the given cf validity by form, birth date/place and digit code\n     * \n     * @param {string} codiceFiscale Complete CF to parse\n     * @returns {boolean} Generic or specific regular expression\n     * @public\n     */\n    static isValid(codiceFiscale) {\n        const matcher = new RegExp(`^(?:${VALIDATOR.CODICE_FISCALE})$`, 'ui');\n        if (\n            // Checking form validity\n            !matcher.test(codiceFiscale) ||\n            //Checking 16th char check digit validity\n            codiceFiscale.substr(15, 1).toUpperCase() !== CheckDigitizer.checkDigit(codiceFiscale) ||\n            //Checking Birth date/place validity\n            !Parser.cfToBirthPlace(codiceFiscale)\n        ) {\n            return false;\n        }\n        return true;\n    }\n}\n\nexport default Validator;","import BirthMonth from './birthMonth.enum';\nimport { Belfiore, BelfioreConnector } from './belfiore';\nimport CheckDigitizer from './checkDigitizer';\nimport DATE_VALIDATOR from './dateValidator.const';\nimport Gender from './gender.enum';\nimport Omocode from './omocode.enum';\nimport Parser from './parser';\nimport Validator from './validator';\nimport VALIDATOR from './validator.const';\n\n/**\n * @module CodiceFiscaleUtils\n */\nexport {\n    /**\n     * {@link BelfioreConnector}\n     */\n    Belfiore,\n    /**\n     * {@link BelfioreConnector}\n     */\n    BelfioreConnector,\n    /**\n     * {@link BirthMonth}\n     */\n    BirthMonth,\n    /**\n     * {@link CheckDigitizer}\n     */\n    CheckDigitizer,\n    /**\n     * {@link DATE_VALIDATOR}\n     */\n    DATE_VALIDATOR,\n    /**\n     * {@link Gender}\n     */\n    Gender,\n    /**\n     * {@link Omocode}\n     */\n    Omocode,\n    /**\n     * {@link Parser}\n     */\n    Parser,\n    /**\n     * {@link VALIDATOR}\n     */\n    VALIDATOR,\n    /**\n     * {@link Validator}\n     */\n    Validator\n};"],"sourceRoot":""}