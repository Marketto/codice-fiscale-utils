{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external {\"commonjs\":\"moment\",\"commonjs2\":\"moment\",\"amd\":\"moment\",\"var\":\"moment\"}","webpack:///./node_modules/@babel/runtime/helpers/classCallCheck.js","webpack:///./node_modules/@babel/runtime/helpers/createClass.js","webpack:///./node_modules/@babel/runtime/regenerator/index.js","webpack:///./node_modules/@babel/runtime/helpers/slicedToArray.js","webpack:///./node_modules/regenerator-runtime/runtime.js","webpack:///./node_modules/@babel/runtime/helpers/arrayWithHoles.js","webpack:///./node_modules/@babel/runtime/helpers/iterableToArrayLimit.js","webpack:///./node_modules/@babel/runtime/helpers/nonIterableRest.js","webpack:///./src/birthMonth.enum.js","webpack:///./src/belfiore.js","webpack:///./src/validator.const.js","webpack:///./src/checkDigitizer.js","webpack:///./src/dateValidator.const.js","webpack:///./src/diacritics.js","webpack:///./src/gender.enum.js","webpack:///./src/omocode.enum.js","webpack:///./src/parser.js","webpack:///./src/validator.js","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__WEBPACK_EXTERNAL_MODULE__0__","instance","Constructor","TypeError","_defineProperties","target","props","length","descriptor","configurable","writable","protoProps","staticProps","arrayWithHoles","iterableToArrayLimit","nonIterableRest","arr","runtime","undefined","Op","hasOwn","$Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","context","Context","_invoke","state","GenStateSuspendedStart","method","arg","GenStateExecuting","Error","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","done","GenStateSuspendedYield","makeInvokeMethod","fn","obj","err","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","previousPromise","callInvokeWithMethodAndArg","Promise","resolve","reject","invoke","result","__await","then","unwrapped","error","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","constructor","displayName","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","__proto__","awrap","async","iter","toString","keys","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","Function","Array","isArray","_arr","_n","_d","_e","_s","_i","freeze","Proxy","MONTHS","receiver","includes","indexOf","data","licenses","activeDate","codeMatcher","province","hiddenValueConf","defineProperties","_data","_licenses","_activeDate","_codeMatcher","_province","map","resource","from","belfioreCode","e","locationByIndex","reduce","a","b","concat","filter","output","g","resourceData","indexer","indexByName","index","roundItem","matcher","RegExp","date","moment","Belfiore","code","test","paramName","base32name","belfioreToInt","padStart","binaryfindIndex","text","start","end","rangedStart","rangedEnd","currentLength","targetIndex","Math","floor","targetValure","substr","ceil","goAhead","charCodeAt","parseInt","String","fromCharCode","base32daysFrom1861","add","list","startIndex","endIndex","counter","substring","regExpMatcher","seekEntryEndIndex","entryIndex","targetName","belfioreIndex","belFioreInt","belfioreFromInt","provinceOrCountry","dateIndex","creationDate","decodeDate","startOf","expirationDate","endOf","isBefore","isAfter","nameByIndex","isCountry","dataSource","assign","toDate","iso3166","CITIES_COUNTRIES","NAME_MATCHER","SURNAME_MATCHER","FULL_NAME_MATCHER","YEAR_MATCHER","LEAP_YEAR_MATCHER","MONTH_MATCHER","DAY_29_MATCHER","DAY_30_MATCHER","DAY_31_MATCHER","DAY_MATCHER","MALE_DAY_MATCHER","FEMALE_DAY_MATCHER","MONTH_DAY_MATCHER","FULL_DATE_MATCHER","MALE_FULL_DATE_MATCHER","FEMALE_FULL_DATE_MATCHER","CITY_CODE_MATCHER","COUNTRY_CODE_MATCHER","BELFIORE_CODE_MATCHER","CODICE_FISCALE","PARTIAL_NAME_MATCHER","PARTIAL_FULL_NAME","PARTIAL_YEAR","PARTIAL_MONTH_DAY","PARTIAL_FULL_DATE","PARTIAL_BELFIORE_CODE_MATCHER","PARTIAL_CF","CONSONANT_LIST","VOWEL_LIST","OMOCODE_NUMBER_LIST","OMOCODE_NON_ZERO_NUMBER_LIST","OMOCODE_ZERO_LIST","MONTH_LIST","MONTH_30DAYS_LIST","MONTH_31DAYS_LIST","CITY_CODE_LIST","COUNTRY_CODE_LIST","CHECK_DIGIT","CONTROL_CODE_IN","CheckDigitizer","partialCF","split","char","toUpperCase","isNumber","codiceFiscale","VALIDATOR","partialCfValue","evaluateChar","YEAR","MONTH","MONTH_DAY","HOURS","TIMEZONE","TIME","ISO8601_SHORT_DATE","ISO8601_DATE_TIME","DAY","LEAP_MONTH","DAYS_30_MONTHS","DAYS_31_MONTHS","MINUTES","SECONDS","MILLISECONDS","DIACRITICS_MAP","A","AA","AE","AO","AU","AV","AY","B","C","D","DZ","Dz","E","F","G","H","I","J","K","L","LJ","Lj","M","N","NJ","Nj","O","OI","OO","OU","P","Q","R","S","T","TZ","U","V","VY","W","X","Y","Z","aa","ae","ao","au","av","ay","dz","f","h","hv","j","k","lj","nj","oi","ou","oo","q","tz","u","v","vy","w","x","y","z","core","insensitiveMatcher","join","matcherBy","regexp","trim","validator","insensitiveValidator","find","toArray","apply","args","OMOCODE","Parser","replace","match","offset","OMOCODE_BITMAP","checkBitmap","Omocode","surnameCf","cons","vow","matchingLength","cfToSurname","birthDay","Gender","birthYear","current2DigitsYear","format","century","subtract","year","birthMonth","BirthMonth","cfToBirthDay","cfToBirthMonth","cfToBirthYear","dt","Date","UTC","isValid","birthPlace","birthDate","cfToBirthDate","validityCheck","isSameOrAfter","isSameOrBefore","fiscalCode","month","day","surname","cfToName","gender","cfToGender","place","cfToBirthPlace","Diacritics","noDiacriticsSurname","removeDiacritics","partialCf","consonants","surnameToCf","parsedYear","genderValue","some","param","DATE_VALIDATOR","parsedDate","parseDate","cfYear","yearToCf","getFullYear","cfMonth","monthToCf","getMonth","cfDayGender","dayGenderToCf","getDate","targetDate","input","active","findByName","results","searchByName","dtParams","yearMonthDayToDate","nameToCf","dateGenderToCf","placeToCf","checkDigit","cf","cfValue","Validator","parsedDayM","matcherM","matcherF","cfDay","parsedDayGender","parsedDateGender","parsedPlace","parsedCf","encodeCf","cfSurname","cfName","cfDateGender","cfPlace","cfPartValidator","ANY_LETTER","matchFromCf","charMatcher","diacriticsVowelList","possibilities","diacriticsConsonantList","dateIso8601","toJSON","diff","centuries","nameMatcher"],"mappings":"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","file":"codice-fiscale-utils.amd.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 10);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;","module.exports = require(\"regenerator-runtime\");\n","var arrayWithHoles = require(\"./arrayWithHoles\");\n\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit\");\n\nvar nonIterableRest = require(\"./nonIterableRest\");\n\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}\n\nmodule.exports = _slicedToArray;","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nmodule.exports = _arrayWithHoles;","function _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nmodule.exports = _iterableToArrayLimit;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nmodule.exports = _nonIterableRest;","const MONTHS = [\n    'A',\n    'B',\n    'C',\n    'D',\n    'E',\n    'H',\n    'L',\n    'M',\n    'P',\n    'R',\n    'S',\n    'T'\n];\n/**\n * @namespace BirthMonth\n * @property {number} A 0\n * @property {number} B 1\n * @property {number} C 2\n * @property {number} D 3\n * @property {number} E 4\n * @property {number} H 5\n * @property {number} L 6\n * @property {number} M 7\n * @property {number} P 8\n * @property {number} R 9\n * @property {number} S 10\n * @property {number} T 11\n */\nexport default Object.freeze(new Proxy({ MONTHS }, {\n    get(receiver, name) {\n        if (typeof name  === 'string' && receiver.MONTHS.includes(name)) {\n            return receiver.MONTHS.indexOf(name);\n        }\n        return this[name] || receiver.MONTHS[name] || receiver[name];\n    }\n}));","import CITIES_COUNTRIES from './asset/cities-countries.json';\nimport moment from 'moment';\n\n/**\n * Handler for cities and countries Dataset\n * \n * @namespace Belfiore\n */\nclass Belfiore{\n    /**\n     * \n     * @param {Object} param Static json\n     * @param {Array<Array<Object>>} param.data Resource data\n     * @param {Array<Array<Object>>} param.licenses License array\n     * @constructor\n     * @private\n     */\n    constructor({ data, licenses, activeDate, codeMatcher, province }) {\n        if (codeMatcher && province) {\n            throw new Error('Both codeMatcher and province were provided to Bolfiore, only one is allowed');\n        }\n        const hiddenValueConf = value => ({\n            value,\n            enumerable: false,\n            configurable: false,\n            writable: false\n        });\n\n        Object.defineProperties(this, {\n            _data: hiddenValueConf(data),\n            _licenses: hiddenValueConf(licenses),\n            _activeDate: hiddenValueConf(activeDate),\n            _codeMatcher: hiddenValueConf(codeMatcher),\n            _province: hiddenValueConf(province)\n        });\n        return new Proxy(this, this.constructor);\n    }\n\n    /**\n     * @returns {Array<Object>} List of places\n     * @public\n     */\n    toArray() {\n        return this._data\n            .map(resource => Array.from(new Array(resource.belfioreCode.length / 3), (e, i) => this.constructor.locationByIndex(resource, i, {\n                activeDate: this._activeDate,\n                codeMatcher: this._codeMatcher,\n                province: this._province,\n                licenses: this._licenses\n            })))\n            .reduce((a, b) => a.concat(b))\n            .filter(e => !!e);\n    }\n\n    /**\n     * Search places matching given name\n     * @param {string} name Place name\n     * @returns {Array<Object>} List of places\n     * @public\n     */\n    searchByName(name) {\n        if (!name || typeof name !== 'string') {\n            return null;\n        }\n        let output = [];\n        for (let g = 0; g < this._data.length; g++) {\n            const resourceData = this._data[g];\n            const indexer = this.constructor.indexByName(resourceData.name, name);\n            for (let index of indexer) {\n                if (index >= 0) {\n                    const roundItem = this.constructor.locationByIndex(resourceData, index, {\n                        activeDate: this._activeDate,\n                        codeMatcher: this._codeMatcher,\n                        province: this._province,\n                        licenses: this._licenses\n                    });\n                    if (roundItem) {\n                        output.push(roundItem);\n                    }\n                }\n            }\n        }\n        return output;\n    }\n\n    /**\n     * Find place matching given name, retuns place object if provided name match only 1 result\n     * @param {string} name Place name\n     * @returns {Object|null}\n     * @public\n     */\n    findByName(name) {\n        if (!name || typeof name !== 'string') {\n            return null;\n        }\n        const matcher = new RegExp(`^${name}$`, 'i');\n        for (let g = 0; g < this._data.length; g++) {\n            const resourceData = this._data[g];\n            const indexer = this.constructor.indexByName(resourceData.name, matcher);\n            for (let index of indexer) {\n                if (index >= 0) {\n                    const roundItem = this.constructor.locationByIndex(resourceData, index, {\n                        activeDate: this._activeDate,\n                        codeMatcher: this._codeMatcher,\n                        province: this._province,\n                        licenses: this._licenses\n                    });\n                    if (roundItem) {\n                        return roundItem;\n                    }\n                }\n            }\n        }\n        return null;\n    }\n\n    /**\n     * Returns a Proxied version of Belfiore which filters results by given date\n     * @param {string|Date|Moment|Array<number>} [date = moment()] Target date to filter places active only for the given date\n     * @returns {Belfiore} Belfiore instance filtered by active date\n     * @public\n     */\n    active(date = moment()) {\n        const { _data, _licenses, _codeMatcher, _province } = this;\n        return new Belfiore({\n            data: _data,\n            licenses: _licenses,\n            activeDate: moment(date),\n            province: _province,\n            codeMatcher: _codeMatcher\n        });\n    }\n\n    /**\n     * Returns a Belfiore instance filtered by the given province\n     * @param {string} code Province Code (2 A-Z char)\n     * @returns {Belfiore} Belfiore instance filtered by province code\n     * @public\n     */\n    byProvince(code) {\n        if (!(typeof code === 'string' && (/^[A-Z]{2}$/u).test(code))) {\n            return;\n        }\n        const { _data, _licenses, _activeDate } = this;\n        return new Belfiore({\n            data: _data,\n            licenses: _licenses,\n            activeDate: _activeDate,\n            province: code\n        });\n    }\n\n    /**\n     * Returns a Proxied version of Belfiore which filters results by place type\n     * @readonly\n     * @returns {Belfiore} Belfiore instance filtered by cities\n     * @public\n     */\n    get cities() {\n        const { _data, _licenses, _activeDate } = this;\n        return new Belfiore({\n            data: _data,\n            licenses: _licenses,\n            activeDate: _activeDate,\n            codeMatcher: /^[A-Y]/u\n        });\n    }\n\n    /**\n     * Returns a Proxied version of Belfiore which filters results by place type\n     * @readonly\n     * @returns {Belfiore} Belfiore instance filtered by countries\n     * @public\n     */\n    get countries() {\n        const { _data, _licenses, _activeDate } = this;\n        return new Belfiore({\n            data: _data,\n            licenses: _licenses,\n            activeDate: _activeDate,\n            codeMatcher: /^Z/u\n        });\n    }\n\n    /**\n     * Get Proxy\n     * @param {Object} resource target resource\n     * @param {string|number|Symbol} paramName property name to proxy\n     * @returns {*} Proxied property\n     * @private\n     */\n    static get (resource, paramName) {\n        if (typeof paramName  === 'string' && (/^[A-Z]\\d{3}$/u).test(paramName)){\n            const base32name = this.belfioreToInt(paramName).toString(32).padStart(3, '0');\n            for (let g = 0; g < resource._data.length; g++) {\n                const resourceData = resource._data[g];\n                const index = this.binaryfindIndex(resourceData.belfioreCode, base32name);\n                if (index >= 0) {\n                    return this.locationByIndex(resourceData, index, {\n                        activeDate: resource._activeDate,\n                        codeMatcher: resource._codeMatcher,\n                        province: resource._province,\n                        licenses: resource._licenses\n                    });\n                }\n            }\n        }\n\n        if (\n            \n            (resource._codeMatcher || resource._province) &&\n                ['cities', 'countries'].includes(paramName)\n             ||\n            \n                paramName === 'byProvince' &&\n                (resource._codeMatcher.test('Z000') || resource._province)\n            \n        ) {\n            return;\n        }\n\n        return resource[paramName];\n    }\n\n    /**\n     * Binary find Index (works ONLY in sorted arrays)\n     * @param {string} text Unique string of values of the same length (step)\n     * @param {string} value Exact text to find\n     * @param {number} start text start index for seeking the value\n     * @param {number} end text end index for seeking the value\n     * @param {number} step length of a single value to seek properly the text string\n     * @returns {number} Found value Index or -1 if not found\n     * @private\n     */\n    static binaryfindIndex(text, value, start, end) {\n        if (typeof text !== 'string' || !text.length) {\n            return -1;\n        }\n        const rangedStart = (!start || start < 0) ? 0 : start;\n        const rangedEnd = (!end || end >= text.length) ? (text.length - 1) : end;\n        const currentLength = rangedEnd - rangedStart + 1;\n        if (rangedStart > rangedEnd || currentLength % value.length) {\n            return -1;\n        }\n        const targetIndex = rangedStart + Math.floor(currentLength/(2*value.length))*value.length;\n        const targetValure = text.substr(targetIndex, value.length);\n        if (targetValure === value) {\n            return Math.ceil((targetIndex + 1) / value.length) -1;\n        }\n        const goAhead = value > targetValure;\n        return this.binaryfindIndex(text, value, goAhead ? targetIndex + value.length : rangedStart, goAhead ? rangedEnd : targetIndex - 1);\n    }\n\n    /**\n     * Converts belfiore code into an int\n     * @param {string} code Belfiore Code\n     * @returns {number} Int version of belfiore code\n     * @private\n     */\n    static belfioreToInt(code) {\n        return (code.charCodeAt()-65)*10**3 + parseInt(code.substr(1));\n    }\n\n    /**\n     * Converts int to belfiore code\n     * @param {number} code Belfiore int code\n     * @returns {string} Standard belfiore code\n     * @private\n     */\n    static belfioreFromInt(code) {\n        return `${String.fromCharCode(Math.floor(code / 10**3) + 65)}${code.toString().substr(-3).padStart(3, '0')}`;\n    }\n\n    /**\n     * Converst Base 32 number of days since 01/01/1861 to Moment instance\n     * @param {string} base32daysFrom1861 Base 32 number of days from 1861-01-01\n     * @returns {Moment} Moment instance date\n     * @private\n     */\n    static decodeDate(base32daysFrom1861) {\n        return moment('1861-01-01').add(parseInt(base32daysFrom1861, 32) ,'days');\n    }\n\n    /**\n     * Retrieve string at index posizion\n     * @param {string} [list=''] concatenation of names\n     * @param {number} index target name index\n     * @returns {string} index-th string\n     * @private\n     */\n    static nameByIndex(list = '', index) {\n        let startIndex = 0,\n            endIndex = list.indexOf('|', startIndex + 1),\n            counter = index;\n\n        while (counter > 0 && endIndex > startIndex) {\n            counter--;\n            startIndex = endIndex + 1;\n            endIndex = list.indexOf('|', startIndex + 1);\n        }\n        \n        if (index < 0 || counter > 0) {\n            throw new Error(`[Belfiore.nameByIndex] Provided index ${index} is out range`);\n        }\n\n        if (!counter && endIndex < 0) {\n            return list.substring(startIndex);\n        }\n\n        return list.substring(startIndex, endIndex);\n    }\n\n    /**\n     * Retrieve string at index posizion\n     * @generator\n     * @param {string} [list=''] concatenation of names\n     * @param {string|RegExp} matcher target name index\n     * @yields {number} index\n     * @returns {number} -1 when Done\n     * @private\n     */\n    static* indexByName(list = '', matcher) {\n        const regExpMatcher = typeof matcher === 'string' ? new RegExp(matcher, 'i') : matcher;\n        \n        if (!(regExpMatcher instanceof RegExp)) {\n            throw new Error(\"Provided matcher must be of type string or RegExp\");\n        }\n\n        const seekEntryEndIndex = index => list.indexOf('|', index +1) + 1 || list.length;\n        \n        for(let startIndex = 0, entryIndex = 0; startIndex < list.length; entryIndex++) {\n            const endIndex = seekEntryEndIndex(startIndex);\n            const targetName = list.substring(startIndex, endIndex -1);\n            if (regExpMatcher.test(targetName)) {\n                yield entryIndex;\n            }\n            // Moving to next entry to chgeck\n            startIndex = endIndex;\n        }\n        return -1;\n    }\n\n    /**\n     * Retrieve location for the given index in the given subset\n     * @param {string} resourceData concatenation of names\n     * @param {number} index target name index\n     * @returns {Object} location\n     * @private\n     */\n    static locationByIndex(resourceData, index, { activeDate, codeMatcher, province, licenses } = {}) {\n        const belfioreIndex = index * 3;\n        if (resourceData.belfioreCode.length - belfioreIndex < 3) {\n            return null;\n        }\n        const belFioreInt = parseInt(resourceData.belfioreCode.substr(belfioreIndex, 3), '32');\n        const belfioreCode = this.belfioreFromInt(belFioreInt);\n        if (codeMatcher && !codeMatcher.test(belfioreCode)) {\n            return null;\n        }\n        const code = resourceData.provinceOrCountry.substr(index * 2, 2);\n        if (province && province !== code) {\n            return null;\n        }\n\n        const dateIndex = index * 4;\n        const creationDate = this.decodeDate((resourceData.creationDate || '').substr(dateIndex, 4) || '0').startOf('day');\n        const expirationDate = this.decodeDate((resourceData.expirationDate || '').substr(dateIndex, 4) || '2qn13').endOf('day');\n        if (\n            activeDate && \n            (\n                resourceData.creationDate && activeDate.isBefore(creationDate, 'day') ||\n                resourceData.expirationDate &&  activeDate.isAfter(expirationDate, 'day')\n            )\n        ) {\n            return null;\n        }\n        const name = this.nameByIndex(resourceData.name, index);\n        const isCountry = belfioreCode[0] === 'Z';\n\n        const dataSource = licenses[parseInt(parseInt(resourceData.dataSource, 32).toString(2).padStart(resourceData.belfioreCode.length * 2/3, 0).substr(index * 2, 2), 2)];\n\n        return Object.assign({\n            belfioreCode,\n            name,\n            creationDate: creationDate.toDate(),\n            expirationDate: expirationDate.toDate(),\n            dataSource\n        }, isCountry ? {\n            iso3166: code\n        } : {\n            province: code\n        });\n    }\n}\n\nexport default new Belfiore(CITIES_COUNTRIES);","const CONSONANT_LIST = 'B-DF-HJ-NP-TV-Z';\nconst VOWEL_LIST = 'AEIOU';\nconst OMOCODE_NUMBER_LIST = '\\\\dLMNP-V';\nconst OMOCODE_NON_ZERO_NUMBER_LIST = '1-9MNP-V';\nconst OMOCODE_ZERO_LIST = '0L';\nconst MONTH_LIST = 'A-EHLMPR-T';\nconst MONTH_30DAYS_LIST = 'DHPS';\nconst MONTH_31DAYS_LIST = 'ACELMRT';\nconst CITY_CODE_LIST = 'A-M';\nconst COUNTRY_CODE_LIST = 'Z';\n\nconst NAME_MATCHER = `[A-Z][${VOWEL_LIST}][${VOWEL_LIST}X]|[${CONSONANT_LIST}]{2}[A-Z]`;\nconst SURNAME_MATCHER = NAME_MATCHER;\nconst FULL_NAME_MATCHER = `(?:${NAME_MATCHER}){2}`;\n\nconst YEAR_MATCHER = `[${OMOCODE_NUMBER_LIST}]{2}`;\nconst LEAP_YEAR_MATCHER = '[02468LNQSU][048LQU]|[13579MPRTV][26NS]';\nconst MONTH_MATCHER = `[${MONTH_LIST}]`;\nconst DAY_2X_MATCHER = '[26NS]';\nconst DAY_3X_MATCHER = '[37PT]';\nconst DAY_29_MATCHER = `[${OMOCODE_ZERO_LIST}4Q][${OMOCODE_NON_ZERO_NUMBER_LIST}]|[1256MNRS][${OMOCODE_NUMBER_LIST}]`;\nconst DAY_30_MATCHER = `[${DAY_3X_MATCHER}][${OMOCODE_ZERO_LIST}]`;\nconst DAY_31_MATCHER = `[${DAY_3X_MATCHER}][${OMOCODE_ZERO_LIST}1M]`;\n\nconst DAY_MATCHER = `(?:${DAY_29_MATCHER}|${DAY_3X_MATCHER}[${OMOCODE_ZERO_LIST}1M])`;\nconst MALE_DAY_MATCHER = `(?:[${OMOCODE_ZERO_LIST}][${OMOCODE_NON_ZERO_NUMBER_LIST}]|[12MN][${OMOCODE_NUMBER_LIST}]|[3P][${OMOCODE_ZERO_LIST}1M])`;\nconst FEMALE_DAY_MATCHER = `(?:[4Q][${OMOCODE_NON_ZERO_NUMBER_LIST}]|[56RS][${OMOCODE_NUMBER_LIST}]|[7T][${OMOCODE_ZERO_LIST}1M])`;\nconst MONTH_DAY_MATCHER = `${MONTH_MATCHER}(?:${DAY_29_MATCHER})|[${MONTH_30DAYS_LIST}]${DAY_30_MATCHER}|[${MONTH_31DAYS_LIST}]${DAY_31_MATCHER}`;\nconst FULL_DATE_MATCHER = `${YEAR_MATCHER}(?:${MONTH_MATCHER}(?:[${OMOCODE_ZERO_LIST}4Q][${OMOCODE_NON_ZERO_NUMBER_LIST}]|[15MR][${OMOCODE_NUMBER_LIST}]|${DAY_2X_MATCHER}[0-8LMNP-U])|[${MONTH_30DAYS_LIST}]${DAY_3X_MATCHER}[${OMOCODE_ZERO_LIST}]|[${MONTH_31DAYS_LIST}]${DAY_3X_MATCHER}[${OMOCODE_ZERO_LIST}1M]|[${MONTH_30DAYS_LIST}${MONTH_31DAYS_LIST}]${DAY_2X_MATCHER}[9V])|(?:${LEAP_YEAR_MATCHER})B${DAY_2X_MATCHER}[9V]`;\nconst MALE_FULL_DATE_MATCHER = `${YEAR_MATCHER}(?:${MONTH_MATCHER}(?:[${OMOCODE_ZERO_LIST}4Q][${OMOCODE_NON_ZERO_NUMBER_LIST}]|[1M][${OMOCODE_NUMBER_LIST}]|[2N][0-8LMNP-U])|[${MONTH_30DAYS_LIST}][3P][${OMOCODE_ZERO_LIST}]|[${MONTH_31DAYS_LIST}][3P][${OMOCODE_ZERO_LIST}1M]|[${MONTH_30DAYS_LIST}${MONTH_31DAYS_LIST}][2N][9V])|(?:${LEAP_YEAR_MATCHER})B[2N][9V]`;\nconst FEMALE_FULL_DATE_MATCHER = `${YEAR_MATCHER}(?:${MONTH_MATCHER}(?:[${OMOCODE_ZERO_LIST}4Q][${OMOCODE_NON_ZERO_NUMBER_LIST}]|[5R][${OMOCODE_NUMBER_LIST}]|[6S][0-8LMNP-U])|[${MONTH_30DAYS_LIST}][7T][${OMOCODE_ZERO_LIST}]|[${MONTH_31DAYS_LIST}][7T][${OMOCODE_ZERO_LIST}1M]|[${MONTH_30DAYS_LIST}${MONTH_31DAYS_LIST}][6S][9V])|(?:${LEAP_YEAR_MATCHER})B[6S][9V]`;\n\nconst CITY_CODE_MATCHER = `[${CITY_CODE_LIST}](?:[${OMOCODE_NON_ZERO_NUMBER_LIST}][${OMOCODE_NUMBER_LIST}]{2}|[${OMOCODE_ZERO_LIST}](?:[${OMOCODE_NON_ZERO_NUMBER_LIST}][${OMOCODE_NUMBER_LIST}]|[${OMOCODE_ZERO_LIST}][${OMOCODE_NON_ZERO_NUMBER_LIST}]))`;\nconst COUNTRY_CODE_MATCHER = `${COUNTRY_CODE_LIST}[${OMOCODE_NON_ZERO_NUMBER_LIST}][${OMOCODE_NUMBER_LIST}]{2}`;\nconst BELFIORE_CODE_MATCHER = `(?:[${CITY_CODE_LIST}${COUNTRY_CODE_LIST}][${OMOCODE_NON_ZERO_NUMBER_LIST}][${OMOCODE_NUMBER_LIST}]{2})|(?:[${CITY_CODE_LIST}][${OMOCODE_ZERO_LIST}](?:[${OMOCODE_NON_ZERO_NUMBER_LIST}][${OMOCODE_NUMBER_LIST}]|[${OMOCODE_ZERO_LIST}][${OMOCODE_NON_ZERO_NUMBER_LIST}]))`;\n\nconst CHECK_DIGIT = '[A-Z]';\n\nconst CODICE_FISCALE = `${FULL_NAME_MATCHER}(?:${FULL_DATE_MATCHER})(?:${BELFIORE_CODE_MATCHER})${CHECK_DIGIT}`;\n\n\nconst PARTIAL_NAME_MATCHER = `[A-Z][${VOWEL_LIST}]?|[${CONSONANT_LIST}]{1,2}`;\nconst PARTIAL_FULL_NAME = `(?:${PARTIAL_NAME_MATCHER})|(?:(?:${NAME_MATCHER})(?:${PARTIAL_NAME_MATCHER})?)`;\nconst PARTIAL_YEAR = `[${OMOCODE_NUMBER_LIST}]`;\nconst PARTIAL_MONTH_DAY = `${MONTH_MATCHER}[${OMOCODE_ZERO_LIST}12456MNQRS]?|[${MONTH_30DAYS_LIST}${MONTH_31DAYS_LIST}]${DAY_3X_MATCHER}`;\nconst PARTIAL_FULL_DATE =`${PARTIAL_YEAR}|(?:${YEAR_MATCHER}(?:${PARTIAL_MONTH_DAY})?)`;\nconst PARTIAL_BELFIORE_CODE_MATCHER = `[${CITY_CODE_LIST}${COUNTRY_CODE_LIST}](?:[${OMOCODE_NON_ZERO_NUMBER_LIST}][${OMOCODE_NUMBER_LIST}]?)?|[${COUNTRY_CODE_LIST}](?:[${OMOCODE_ZERO_LIST}][${OMOCODE_NUMBER_LIST}]?)?`;\n\nconst PARTIAL_CF = `${PARTIAL_FULL_NAME}|(?:${FULL_NAME_MATCHER}(?:(?:${PARTIAL_FULL_DATE})|(?:${FULL_DATE_MATCHER})(?:(?:${PARTIAL_BELFIORE_CODE_MATCHER})|(?:${BELFIORE_CODE_MATCHER})${CHECK_DIGIT}?)?)?)?`;\n\n/**\n * Validator constants\n * @readonly\n * @returns {Object} VALIDATOR\n * \n * @constant {string} VALIDATOR.CONSONANT_LIST List of consonant to be used in a RegExp\n * @constant {string} VALIDATOR.VOWEL_LIST List of vowels to be used in a RegExp\n * @constant {string} VALIDATOR.OMOCODE_NUMBER_LIST List of numbers and their omocode counterparts to be used in a RegExp\n * @constant {string} VALIDATOR.OMOCODE_NON_ZERO_NUMBER_LIST List of numbers but 0 and their omocode counterparts to be used in a RegExp\n * @constant {string} VALIDATOR.OMOCODE_ZERO_LIST List of 0 and its omocode counterpart to be used in a RegExp\n * @constant {string} VALIDATOR.MONTH_LIST\n * @constant {string} VALIDATOR.MONTH_30DAYS_LIST\n * @constant {string} VALIDATOR.MONTH_31DAYS_LIST\n * @constant {string} VALIDATOR.CITY_CODE_LIST\n * @constant {string} VALIDATOR.COUNTRY_CODE_LIST\n * @constant {string} VALIDATOR.NAME_MATCHER\n * @constant {string} VALIDATOR.SURNAME_MATCHER\n * @constant {string} VALIDATOR.FULL_NAME_MATCHER\n * @constant {string} VALIDATOR.YEAR_MATCHER\n * @constant {string} VALIDATOR.LEAP_YEAR_MATCHER\n * @constant {string} VALIDATOR.MONTH_MATCHER\n * @constant {string} VALIDATOR.DAY_29_MATCHER\n * @constant {string} VALIDATOR.DAY_30_MATCHER\n * @constant {string} VALIDATOR.DAY_31_MATCHER\n * @constant {string} VALIDATOR.DAY_MATCHER\n * @constant {string} VALIDATOR.MALE_DAY_MATCHER\n * @constant {string} VALIDATOR.FEMALE_DAY_MATCHER\n * @constant {string} VALIDATOR.MONTH_DAY_MATCHER\n * @constant {string} VALIDATOR.FULL_DATE_MATCHER\n * @constant {string} VALIDATOR.MALE_FULL_DATE_MATCHER\n * @constant {string} VALIDATOR.FEMALE_FULL_DATE_MATCHER\n * @constant {string} VALIDATOR.CITY_CODE_MATCHER\n * @constant {string} VALIDATOR.COUNTRY_CODE_MATCHER\n * @constant {string} VALIDATOR.BELFIORE_CODE_MATCHER\n * @constant {string} VALIDATOR.CHECK_DIGIT\n * @constant {string} VALIDATOR.CODICE_FISCALE\n * @constant {string} VALIDATOR.PARTIAL_NAME_MATCHER\n * @constant {string} VALIDATOR.PARTIAL_FULL_NAME\n * @constant {string} VALIDATOR.PARTIAL_YEAR\n * @constant {string} VALIDATOR.PARTIAL_MONTH_DAY\n * @constant {string} VALIDATOR.PARTIAL_FULL_DATE\n * @constant {string} VALIDATOR.PARTIAL_BELFIORE_CODE_MATCHER\n * @constant {string} VALIDATOR.PARTIAL_CF\n * \n * @namespace VALIDATOR\n */\nexport default Object.freeze({\n    CONSONANT_LIST,\n    VOWEL_LIST,\n    OMOCODE_NUMBER_LIST,\n    OMOCODE_NON_ZERO_NUMBER_LIST,\n    OMOCODE_ZERO_LIST,\n    MONTH_LIST,\n    MONTH_30DAYS_LIST,\n    MONTH_31DAYS_LIST,\n    CITY_CODE_LIST,\n    COUNTRY_CODE_LIST,\n    NAME_MATCHER,\n    SURNAME_MATCHER,\n    FULL_NAME_MATCHER,\n    YEAR_MATCHER,\n    LEAP_YEAR_MATCHER,\n    MONTH_MATCHER,\n    DAY_29_MATCHER,\n    DAY_30_MATCHER,\n    DAY_31_MATCHER,\n    DAY_MATCHER,\n    MALE_DAY_MATCHER,\n    FEMALE_DAY_MATCHER,\n    MONTH_DAY_MATCHER,\n    FULL_DATE_MATCHER,\n    MALE_FULL_DATE_MATCHER,\n    FEMALE_FULL_DATE_MATCHER,\n    CITY_CODE_MATCHER,\n    COUNTRY_CODE_MATCHER,\n    BELFIORE_CODE_MATCHER,\n    CHECK_DIGIT,\n    CODICE_FISCALE,\n    PARTIAL_NAME_MATCHER,\n    PARTIAL_FULL_NAME,\n    PARTIAL_YEAR,\n    PARTIAL_MONTH_DAY,\n    PARTIAL_FULL_DATE,\n    PARTIAL_BELFIORE_CODE_MATCHER,\n    PARTIAL_CF\n});","import VALIDATOR from './validator.const';\n\nconst CONTROL_CODE_IN = {\n    'A': 1,\n    'B': 0,\n    'C': 5,\n    'D': 7,\n    'E': 9,\n    'F': 13,\n    'G': 15,\n    'H': 17,\n    'I': 19,\n    'J': 21,\n    'K': 2,\n    'L': 4,\n    'M': 18,\n    'N': 20,\n    'O': 11,\n    'P': 3,\n    'Q': 6,\n    'R': 8,\n    'S': 12,\n    'T': 14,\n    'U': 16,\n    'V': 10,\n    'W': 22,\n    'X': 25,\n    'Y': 24,\n    'Z': 23\n};\n\n\n/**\n * CodiceFiscal 16th char check digit calculator\n * @class\n * @public\n *//**\n *\n * @namespace CheckDigitizer\n */\nclass CheckDigitizer {\n\n    /**\n     * Partial FiscalCode Evaluator\n     * @param {string} [partialCF=''] Partial Fiscal Code to evaluate\n     * @generator\n     * @yields {number} character value odd/even\n     * @returns {number} 0\n     * @public\n     */\n    static* evaluateChar(partialCF = '') {\n        for(let index in partialCF.split('')){\n            const char = partialCF[index].toUpperCase();\n            const isNumber = (/^\\d/u).test(char);\n            //Odd/Even are shifted/swapped (array starts from 0, 'Agenzia delle Entrate' documentation counts the string from 1)\n            if (index%2) {\n                //Odd positions\n                yield char.charCodeAt(0) - (isNumber ? 48 : 65);\n            } else {\n                //Even positions\n                yield CONTROL_CODE_IN[isNumber ? String.fromCharCode(parseInt(char) + 65) : char];\n            }\n        }\n        return 0;\n    }\n\n    /**\n     * Evaluate given partial CF to produce last check digit character\n     * @param {string} codiceFiscale Partial or complete Fiscal Code to evaluate to produce last character\n     * @returns {char|null} 16th CF char\n     * @public\n     */\n    static checkDigit(codiceFiscale) {\n        if (typeof codiceFiscale === 'string' && (new RegExp(VALIDATOR.PARTIAL_CF)).test(codiceFiscale)) {\n            const partialCF = codiceFiscale.substr(0, 15);\n            let partialCfValue = 0;\n            for (let charValue of this.evaluateChar(partialCF)) partialCfValue += charValue;\n            return String.fromCharCode(partialCfValue%26 + 65);\n        }\n        return null;\n    }\n}\n\nexport default CheckDigitizer;","const YEAR = '[12][0-9]{3}';\nconst MONTH = '0[1-9]|1[0-2]';\nconst DAY = '0[1-9]|[12][0-9]|3[01]';\nconst LEAP_MONTH = '02';\nconst DAYS_30_MONTHS = '0[469]|11';\nconst DAYS_31_MONTHS = '0[13578]|1[02]';\nconst MONTH_DAY = `(?:${MONTH})-(?:0[1-9]|[12]\\\\d)|(?:${DAYS_30_MONTHS})-30|(?:${DAYS_31_MONTHS})-3[01]`;\nconst HOURS = '[01]\\\\d|2[0-3]';\nconst MINUTES = '[0-5]\\\\d';\nconst SECONDS = MINUTES;\nconst MILLISECONDS = '\\\\d{3}';\nconst TIMEZONE = `Z|[-+](?:${HOURS})(?::?${MINUTES})?`;\nconst TIME = `(?:${HOURS})(?::${MINUTES}(?::${SECONDS}(\\\\.${MILLISECONDS})?)?(?:${TIMEZONE})?)?`;\nconst ISO8601_SHORT_DATE = `${YEAR}-(?:${MONTH_DAY})(?:T${TIME})?`;\nconst ISO8601_DATE_TIME = `${YEAR}(?:-(?:(?:${MONTH})|(?:${MONTH_DAY})(?:T${TIME})?))?`;\n\n/**\n * Date Validator propertys\n * @namespace DATE_VALIDATOR\n * @property {Object} DATE_VALIDATOR\n * @property {string} DATE_VALIDATOR.YEAR String matcher for ISO8601 4 digits year (limited to 1000-2999)\n * @property {string} DATE_VALIDATOR.MONTH String matcher for ISO8601 2 digits month (01-12)\n * @property {string} DATE_VALIDATOR.DAY String matcher for ISO8601 2 digits day (01-31)\n * @property {string} DATE_VALIDATOR.LEAP_MONTH String matcher for ISO8601 2 digits leap month\n * @property {string} DATE_VALIDATOR.DAYS_30_MONTHS String matcher for ISO8601 2 digits 30 days month\n * @property {string} DATE_VALIDATOR.DAYS_31_MONTHS String matcher for ISO8601 2 digits 31 days month\n * @property {string} DATE_VALIDATOR.MONTH_DAY String matcher for ISO8601 2 digits month + 2 digit day tailored for 28/29, 30 and 31 days months (##-##)\n * @property {string} DATE_VALIDATOR.ISO8601_SHORT_DATE String matcher for ISO8601 date: 4 digits year, 2 digits month and 2 digit day tailored for 28/29, 30 and 31 days months (####-##-##)\n * @property {string} DATE_VALIDATOR.HOURS String matcher for ISO8601 2 digits hours (00-23)\n * @property {string} DATE_VALIDATOR.MINUTES String matcher for ISO8601 2 digits minutes (00-59)\n * @property {string} DATE_VALIDATOR.SECONDS String matcher for ISO8601 2 digits seconds (00-59)\n * @property {string} DATE_VALIDATOR.MILLISECONDS String matcher for ISO8601 3 digits milliseconds (000-999)\n * @property {string} DATE_VALIDATOR.TIMEZONE String matcher for ISO8601 timezone (Z or ±## or ±##:## or ±####)\n * @property {string} DATE_VALIDATOR.TIME String matcher for ISO8601 for time (T## , T##:## , T##:##:## , T##:##:##.###)\n * @property {string} DATE_VALIDATOR.ISO8601_DATE_TIME String matcher for ISO8601 date/time format\n*/\nexport default Object.freeze({\n    YEAR,\n    MONTH,\n    DAY,\n    LEAP_MONTH,\n    DAYS_30_MONTHS,\n    DAYS_31_MONTHS,\n    MONTH_DAY,\n    ISO8601_SHORT_DATE,\n    HOURS,\n    MINUTES,\n    SECONDS,\n    MILLISECONDS,\n    TIMEZONE,\n    TIME,\n    ISO8601_DATE_TIME\n});","const DIACRITICS_MAP = {\n    A: '\\u0041\\u24B6\\uFF21\\u00C0\\u00C1\\u00C2\\u1EA6\\u1EA4\\u1EAA\\u1EA8\\u00C3\\u0100\\u0102\\u1EB0\\u1EAE\\u1EB4\\u1EB2\\u0226\\u01E0\\u00C4\\u01DE\\u1EA2\\u00C5\\u01FA\\u01CD\\u0200\\u0202\\u1EA0\\u1EAC\\u1EB6\\u1E00\\u0104\\u023A\\u2C6F',\n    AA: '\\uA732',\n    AE: '\\u00C6\\u01FC\\u01E2',\n    AO: '\\uA734',\n    AU: '\\uA736',\n    AV: '\\uA738\\uA73A',\n    AY: '\\uA73C',\n    B: '\\u0042\\u24B7\\uFF22\\u1E02\\u1E04\\u1E06\\u0243\\u0182\\u0181',\n    C: '\\u0043\\u24B8\\uFF23\\u0106\\u0108\\u010A\\u010C\\u00C7\\u1E08\\u0187\\u023B\\uA73E',\n    D: '\\u0044\\u24B9\\uFF24\\u1E0A\\u010E\\u1E0C\\u1E10\\u1E12\\u1E0E\\u0110\\u018B\\u018A\\u0189\\uA779',\n    DZ: '\\u01F1\\u01C4',\n    Dz: '\\u01F2\\u01C5',\n    E: '\\u0045\\u24BA\\uFF25\\u00C8\\u00C9\\u00CA\\u1EC0\\u1EBE\\u1EC4\\u1EC2\\u1EBC\\u0112\\u1E14\\u1E16\\u0114\\u0116\\u00CB\\u1EBA\\u011A\\u0204\\u0206\\u1EB8\\u1EC6\\u0228\\u1E1C\\u0118\\u1E18\\u1E1A\\u0190\\u018E',\n    F: '\\u0046\\u24BB\\uFF26\\u1E1E\\u0191\\uA77B',\n    G: '\\u0047\\u24BC\\uFF27\\u01F4\\u011C\\u1E20\\u011E\\u0120\\u01E6\\u0122\\u01E4\\u0193\\uA7A0\\uA77D\\uA77E',\n    H: '\\u0048\\u24BD\\uFF28\\u0124\\u1E22\\u1E26\\u021E\\u1E24\\u1E28\\u1E2A\\u0126\\u2C67\\u2C75\\uA78D',\n    I: '\\u0049\\u24BE\\uFF29\\u00CC\\u00CD\\u00CE\\u0128\\u012A\\u012C\\u0130\\u00CF\\u1E2E\\u1EC8\\u01CF\\u0208\\u020A\\u1ECA\\u012E\\u1E2C\\u0197',\n    J: '\\u004A\\u24BF\\uFF2A\\u0134\\u0248',\n    K: '\\u004B\\u24C0\\uFF2B\\u1E30\\u01E8\\u1E32\\u0136\\u1E34\\u0198\\u2C69\\uA740\\uA742\\uA744\\uA7A2',\n    L: '\\u004C\\u24C1\\uFF2C\\u013F\\u0139\\u013D\\u1E36\\u1E38\\u013B\\u1E3C\\u1E3A\\u0141\\u023D\\u2C62\\u2C60\\uA748\\uA746\\uA780',\n    LJ: '\\u01C7',\n    Lj: '\\u01C8',\n    M: '\\u004D\\u24C2\\uFF2D\\u1E3E\\u1E40\\u1E42\\u2C6E\\u019C',\n    N: '\\u004E\\u24C3\\uFF2E\\u01F8\\u0143\\u00D1\\u1E44\\u0147\\u1E46\\u0145\\u1E4A\\u1E48\\u0220\\u019D\\uA790\\uA7A4',\n    NJ: '\\u01CA',\n    Nj: '\\u01CB',\n    O: '\\u004F\\u24C4\\uFF2F\\u00D2\\u00D3\\u00D4\\u1ED2\\u1ED0\\u1ED6\\u1ED4\\u00D5\\u1E4C\\u022C\\u1E4E\\u014C\\u1E50\\u1E52\\u014E\\u022E\\u0230\\u00D6\\u022A\\u1ECE\\u0150\\u01D1\\u020C\\u020E\\u01A0\\u1EDC\\u1EDA\\u1EE0\\u1EDE\\u1EE2\\u1ECC\\u1ED8\\u01EA\\u01EC\\u00D8\\u01FE\\u0186\\u019F\\uA74A\\uA74C',\n    OI: '\\u01A2',\n    OO: '\\uA74E',\n    OU: '\\u0222',\n    P: '\\u0050\\u24C5\\uFF30\\u1E54\\u1E56\\u01A4\\u2C63\\uA750\\uA752\\uA754',\n    Q: '\\u0051\\u24C6\\uFF31\\uA756\\uA758\\u024A',\n    R: '\\u0052\\u24C7\\uFF32\\u0154\\u1E58\\u0158\\u0210\\u0212\\u1E5A\\u1E5C\\u0156\\u1E5E\\u024C\\u2C64\\uA75A\\uA7A6\\uA782',\n    S: '\\u0053\\u24C8\\uFF33\\u1E9E\\u015A\\u1E64\\u015C\\u1E60\\u0160\\u1E66\\u1E62\\u1E68\\u0218\\u015E\\u2C7E\\uA7A8\\uA784',\n    T: '\\u0054\\u24C9\\uFF34\\u1E6A\\u0164\\u1E6C\\u021A\\u0162\\u1E70\\u1E6E\\u0166\\u01AC\\u01AE\\u023E\\uA786',\n    TZ: '\\uA728',\n    U: '\\u0055\\u24CA\\uFF35\\u00D9\\u00DA\\u00DB\\u0168\\u1E78\\u016A\\u1E7A\\u016C\\u00DC\\u01DB\\u01D7\\u01D5\\u01D9\\u1EE6\\u016E\\u0170\\u01D3\\u0214\\u0216\\u01AF\\u1EEA\\u1EE8\\u1EEE\\u1EEC\\u1EF0\\u1EE4\\u1E72\\u0172\\u1E76\\u1E74\\u0244',\n    V: '\\u0056\\u24CB\\uFF36\\u1E7C\\u1E7E\\u01B2\\uA75E\\u0245',\n    VY: '\\uA760',\n    W: '\\u0057\\u24CC\\uFF37\\u1E80\\u1E82\\u0174\\u1E86\\u1E84\\u1E88\\u2C72',\n    X: '\\u0058\\u24CD\\uFF38\\u1E8A\\u1E8C',\n    Y: '\\u0059\\u24CE\\uFF39\\u1EF2\\u00DD\\u0176\\u1EF8\\u0232\\u1E8E\\u0178\\u1EF6\\u1EF4\\u01B3\\u024E\\u1EFE',\n    Z: '\\u005A\\u24CF\\uFF3A\\u0179\\u1E90\\u017B\\u017D\\u1E92\\u1E94\\u01B5\\u0224\\u2C7F\\u2C6B\\uA762',\n    a: '\\u0061\\u24D0\\uFF41\\u1E9A\\u00E0\\u00E1\\u00E2\\u1EA7\\u1EA5\\u1EAB\\u1EA9\\u00E3\\u0101\\u0103\\u1EB1\\u1EAF\\u1EB5\\u1EB3\\u0227\\u01E1\\u00E4\\u01DF\\u1EA3\\u00E5\\u01FB\\u01CE\\u0201\\u0203\\u1EA1\\u1EAD\\u1EB7\\u1E01\\u0105\\u2C65\\u0250',\n    aa: '\\uA733',\n    ae: '\\u00E6\\u01FD\\u01E3',\n    ao: '\\uA735',\n    au: '\\uA737',\n    av: '\\uA739\\uA73B',\n    ay: '\\uA73D',\n    b: '\\u0062\\u24D1\\uFF42\\u1E03\\u1E05\\u1E07\\u0180\\u0183\\u0253',\n    c: '\\u0063\\u24D2\\uFF43\\u0107\\u0109\\u010B\\u010D\\u00E7\\u1E09\\u0188\\u023C\\uA73F\\u2184',\n    d: '\\u0064\\u24D3\\uFF44\\u1E0B\\u010F\\u1E0D\\u1E11\\u1E13\\u1E0F\\u0111\\u018C\\u0256\\u0257\\uA77A',\n    dz: '\\u01F3\\u01C6',\n    e: '\\u0065\\u24D4\\uFF45\\u00E8\\u00E9\\u00EA\\u1EC1\\u1EBF\\u1EC5\\u1EC3\\u1EBD\\u0113\\u1E15\\u1E17\\u0115\\u0117\\u00EB\\u1EBB\\u011B\\u0205\\u0207\\u1EB9\\u1EC7\\u0229\\u1E1D\\u0119\\u1E19\\u1E1B\\u0247\\u025B\\u01DD',\n    f: '\\u0066\\u24D5\\uFF46\\u1E1F\\u0192\\uA77C',\n    g: '\\u0067\\u24D6\\uFF47\\u01F5\\u011D\\u1E21\\u011F\\u0121\\u01E7\\u0123\\u01E5\\u0260\\uA7A1\\u1D79\\uA77F',\n    h: '\\u0068\\u24D7\\uFF48\\u0125\\u1E23\\u1E27\\u021F\\u1E25\\u1E29\\u1E2B\\u1E96\\u0127\\u2C68\\u2C76\\u0265',\n    hv: '\\u0195',\n    i: '\\u0069\\u24D8\\uFF49\\u00EC\\u00ED\\u00EE\\u0129\\u012B\\u012D\\u00EF\\u1E2F\\u1EC9\\u01D0\\u0209\\u020B\\u1ECB\\u012F\\u1E2D\\u0268\\u0131',\n    j: '\\u006A\\u24D9\\uFF4A\\u0135\\u01F0\\u0249',\n    k: '\\u006B\\u24DA\\uFF4B\\u1E31\\u01E9\\u1E33\\u0137\\u1E35\\u0199\\u2C6A\\uA741\\uA743\\uA745\\uA7A3',\n    l: '\\u006C\\u24DB\\uFF4C\\u0140\\u013A\\u013E\\u1E37\\u1E39\\u013C\\u1E3D\\u1E3B\\u017F\\u0142\\u019A\\u026B\\u2C61\\uA749\\uA781\\uA747',\n    lj: '\\u01C9',\n    m: '\\u006D\\u24DC\\uFF4D\\u1E3F\\u1E41\\u1E43\\u0271\\u026F',\n    n: '\\u006E\\u24DD\\uFF4E\\u01F9\\u0144\\u00F1\\u1E45\\u0148\\u1E47\\u0146\\u1E4B\\u1E49\\u019E\\u0272\\u0149\\uA791\\uA7A5',\n    nj: '\\u01CC',\n    o: '\\u006F\\u24DE\\uFF4F\\u00F2\\u00F3\\u00F4\\u1ED3\\u1ED1\\u1ED7\\u1ED5\\u00F5\\u1E4D\\u022D\\u1E4F\\u014D\\u1E51\\u1E53\\u014F\\u022F\\u0231\\u00F6\\u022B\\u1ECF\\u0151\\u01D2\\u020D\\u020F\\u01A1\\u1EDD\\u1EDB\\u1EE1\\u1EDF\\u1EE3\\u1ECD\\u1ED9\\u01EB\\u01ED\\u00F8\\u01FF\\u0254\\uA74B\\uA74D\\u0275',\n    oi: '\\u01A3',\n    ou: '\\u0223',\n    oo: '\\uA74F',\n    p: '\\u0070\\u24DF\\uFF50\\u1E55\\u1E57\\u01A5\\u1D7D\\uA751\\uA753\\uA755',\n    q: '\\u0071\\u24E0\\uFF51\\u024B\\uA757\\uA759',\n    r: '\\u0072\\u24E1\\uFF52\\u0155\\u1E59\\u0159\\u0211\\u0213\\u1E5B\\u1E5D\\u0157\\u1E5F\\u024D\\u027D\\uA75B\\uA7A7\\uA783',\n    s: '\\u0073\\u24E2\\uFF53\\u00DF\\u015B\\u1E65\\u015D\\u1E61\\u0161\\u1E67\\u1E63\\u1E69\\u0219\\u015F\\u023F\\uA7A9\\uA785\\u1E9B',\n    t: '\\u0074\\u24E3\\uFF54\\u1E6B\\u1E97\\u0165\\u1E6D\\u021B\\u0163\\u1E71\\u1E6F\\u0167\\u01AD\\u0288\\u2C66\\uA787',\n    tz: '\\uA729',\n    u: '\\u0075\\u24E4\\uFF55\\u00F9\\u00FA\\u00FB\\u0169\\u1E79\\u016B\\u1E7B\\u016D\\u00FC\\u01DC\\u01D8\\u01D6\\u01DA\\u1EE7\\u016F\\u0171\\u01D4\\u0215\\u0217\\u01B0\\u1EEB\\u1EE9\\u1EEF\\u1EED\\u1EF1\\u1EE5\\u1E73\\u0173\\u1E77\\u1E75\\u0289',\n    v: '\\u0076\\u24E5\\uFF56\\u1E7D\\u1E7F\\u028B\\uA75F\\u028C',\n    vy: '\\uA761',\n    w: '\\u0077\\u24E6\\uFF57\\u1E81\\u1E83\\u0175\\u1E87\\u1E85\\u1E98\\u1E89\\u2C73',\n    x: '\\u0078\\u24E7\\uFF58\\u1E8B\\u1E8D',\n    y: '\\u0079\\u24E8\\uFF59\\u1EF3\\u00FD\\u0177\\u1EF9\\u0233\\u1E8F\\u00FF\\u1EF7\\u1E99\\u1EF5\\u01B4\\u024F\\u1EFF',\n    z: '\\u007A\\u24E9\\uFF5A\\u017A\\u1E91\\u017C\\u017E\\u1E93\\u1E95\\u01B6\\u0225\\u0240\\u2C6C\\uA763'\n};\nconst core = {\n    matcher: Object.freeze(DIACRITICS_MAP),\n\n    insensitiveMatcher: new Proxy({}, {\n        get(receiver, name) {\n            const keys = Object.keys(DIACRITICS_MAP).filter(key => (new RegExp(`^[${key}]$`, 'ui')).test(name));\n            if (keys.length) {\n                return keys.map(key => DIACRITICS_MAP[key]).join('');\n            }\n            return receiver[name];\n        }\n    }),\n\n    /**\n     * Group diacritics by the given RegExp\n     *\n     * @param {RegExp} regexp Matching criteria to filter diacritics\n     * @returns {string}\n     */\n    matcherBy(regexp) {\n        if (regexp instanceof RegExp) {\n            const keys = Object.keys(DIACRITICS_MAP).filter(key => regexp.test(key));\n            if (keys.length) {\n                return keys.map(key => DIACRITICS_MAP[key].trim()).join('');\n            }\n        }\n        return;\n    }\n};\n\n/**\n * @namespace Diacritics\n * @returns {Proxy}\n */\nexport default new Proxy(Object.assign({}, core, {\n    validator: new Proxy({}, {\n        get(receiver, name) {\n            if (typeof name  === 'string' && core.matcher[name]) {\n                return new RegExp(`[${core.matcher[name]}]`, 'u');\n            }\n            return receiver[name];\n        }\n    }),\n\n    insensitiveValidator: new Proxy({}, {\n        get(receiver, name) {\n            if (core.matcher[name]) {\n                return new RegExp(`[${core.insensitiveMatcher[name]}]`, 'ui');\n            }\n            return receiver[name];\n        }\n    })\n}), {\n    get(receiver, name) {\n        if (name.length === 1) {\n            const [normalizedLetter] = Object.values(DIACRITICS_MAP).find(value => (new RegExp(`[${value}]`, 'u')).test(name)) || [];\n            return normalizedLetter || name;\n        }\n        return receiver[name];\n    }\n});","const GENDERS = {\n    M: 0,\n    F: 40\n};\n\n/**\n * @namespace Gender\n * @property {number} M 0\n * @property {number} F 40\n * @property {function({number})} parseNumberToGender\n */\nexport default Object.freeze(new Proxy(Object.assign({}, GENDERS), {\n    get(receiver, name) {\n        if (typeof name  === 'string') {\n            const index = parseInt(name);\n            const values = this.toArray.apply(receiver);\n            if (!isNaN(index) && (index >= 0 && index <= 31 || index >= 40 && index <= 71)) {\n                return values[Math.floor(index/40)];\n            }\n            if (typeof this[name] === 'function') {\n                return (...args) => this[name].apply(receiver, args);\n            }\n        }\n        return this[name] || receiver[name];\n    },\n\n    /**\n     * Return an array of Gender constants\n     *\n     * @returns {Array<string>} List of Gender keys\n     * @memberof Gender\n     */\n    toArray(){\n        return Object.keys(this);\n    }\n}));","const OMOCODE = [\n    'L',\n    'M',\n    'N',\n    'P',\n    'Q',\n    'R',\n    'S',\n    'T',\n    'U',\n    'V'\n];\n\n/**\n * @namespace Omocode\n * @returns {Proxy}\n * @property {number} L\n * @property {number} M\n * @property {number} N\n * @property {number} P\n * @property {number} Q\n * @property {number} R\n * @property {number} S\n * @property {number} T\n * @property {number} U\n * @property {number} V\n */\nexport default Object.freeze(new Proxy({ OMOCODE }, {\n    get(receiver, name) {\n        if(typeof name  === 'string' && receiver.OMOCODE.includes(name)) {\n            return receiver.OMOCODE.indexOf(name);\n        }\n        return this[name] || receiver.OMOCODE[name] || receiver[name];\n    }\n}));","import Belfiore from './belfiore';\nimport BirthMonth from './birthMonth.enum';\nimport CheckDigitizer from './checkDigitizer';\nimport DATE_VALIDATOR from './dateValidator.const';\nimport Diacritics from './diacritics';\nimport Gender from './gender.enum';\nimport moment from 'moment';\nimport Omocode from './omocode.enum';\nimport VALIDATOR from './validator.const';\n\n/**\n * @namespace Parser\n */\nclass Parser {\n\n    /**\n     * Default omocode bitmap\n     * @readonly\n     * @returns {number} Omocode bitmap number\n     * @public\n     */\n    static get OMOCODE_BITMAP(){\n        return 0b0111011011000000;\n    }\n\n    /**\n     * Parse surname information\n     * \n     * @param {string} codiceFiscale Partial or complete Omocode/Regular CF to parse\n     * @returns {string|null} Regular CF w/o omocodes chars\n     * @public\n     */\n    static cfDeomocode(codiceFiscale) {\n        if (typeof codiceFiscale !== 'string' || codiceFiscale.length < 7) {\n            return codiceFiscale;\n        }\n\n        const checkBitmap = offset => !!(2**offset & this.OMOCODE_BITMAP);\n\n        return codiceFiscale.replace(/[\\dA-Z]/giu, (match, offset) => (/^[A-Z]$/giu).test(match) && checkBitmap(offset) ? Omocode[match] : match);\n    }\n\n    /**\n     * Parse surname information\n     * \n     * @param {string} codiceFiscale Partial or complete CF to parse\n     * @returns {string|null} Partial/possible surname\n     * @public\n     */\n    static cfToSurname(codiceFiscale) {\n        if (typeof codiceFiscale !== 'string' || codiceFiscale.length < 3 || !(/^[A-Z]{3}/iu).test(codiceFiscale)) {\n            return null;\n        }\n\n        const surnameCf = codiceFiscale.substr(0,3);\n\n        const [cons = ''] = surnameCf.match(new RegExp(`^[${VALIDATOR.CONSONANT_LIST}]{1,3}`, 'ig')) || [];\n        const [vow = ''] = surnameCf.match(new RegExp(`[${VALIDATOR.VOWEL_LIST}]{1,3}`, 'ig')) || [];\n\n        const matchingLength = cons.length + vow.length;\n\n        if (matchingLength < 2 || matchingLength < 3 && surnameCf[2].toUpperCase() !== 'X') {\n            return null;\n        }\n\n        switch(cons.length) {\n        case 3:\n            return (cons + vow).split('').join('*') + '*';\n        case 2:\n            return `${cons[0]}${vow[0]}*${cons[1]}*`;\n        case 1:\n            return `${cons[0]}${vow}*`;\n        default:\n            return `${vow}${vow.length === 3 ? '*': ''}`;\n        }\n    }\n\n    /**\n     * Parse name information\n     * \n     * @param {string} codiceFiscale Partial or complete CF to parse\n     * @returns {string|null} Partial/possible name\n     * @public\n     */\n    static cfToName(codiceFiscale) {\n        if (typeof codiceFiscale !== 'string' || codiceFiscale.length < 3 || !(/^[A-Z]{6}/iu).test(codiceFiscale)) {\n            return null;\n        }\n        return this.cfToSurname(codiceFiscale.substr(3, 3));\n    }\n\n    /**\n     * Parse gender information\n     * \n     * @param {string} codiceFiscale Partial or complete CF to parse\n     * @returns {'M'|'F'|null} Male or female\n     * @public\n     */\n    static cfToGender(codiceFiscale) {\n        if (typeof codiceFiscale !== 'string' || codiceFiscale.length < 11) {\n            return null;\n        }\n        const birthDay = parseInt(codiceFiscale.substr(9,2));\n        if (birthDay === 0 || birthDay === 40) {\n            return null;\n        }\n        return Gender[birthDay];\n    }\n\n    /**\n     * Parse birth year information\n     * \n     * @param {string} codiceFiscale Partial or complete CF to parse\n     * @returns {number|null} Birth Year (4 digits)\n     * @public\n     */\n    static cfToBirthYear(codiceFiscale) {\n        if (typeof codiceFiscale !== 'string' || codiceFiscale.length < 8) {\n            return null;\n        }\n        const birthYear = parseInt(codiceFiscale.substr(6,2));\n\n        if (isNaN(birthYear)) {\n            return null;\n        }\n\n        const current2DigitsYear = parseInt(moment().format('YY'));\n\n        const century = (birthYear > current2DigitsYear) * 100;\n        return moment().subtract(current2DigitsYear - birthYear + century, 'years').year();\n    }\n\n    /**\n     * Parse birth month information\n     * \n     * @param {string} codiceFiscale Partial or complete CF to parse\n     * @returns {number|null} Birth Month (0...11 - Date notation)\n     * @public\n     */\n    static cfToBirthMonth(codiceFiscale) {\n        if (typeof codiceFiscale !== 'string' || codiceFiscale.length < 9) {\n            return null;\n        }\n\n        const birthMonth = BirthMonth[codiceFiscale.substr(8,1)];\n        if (!birthMonth && birthMonth !== 0) {\n            return null;\n        }\n        return birthMonth;\n    }\n\n    /**\n     * Parse birth day information\n     * \n     * @param {string} codiceFiscale Partial or complete CF to parse\n     * @returns {number|null} Birth day (1..31)\n     * @public\n     */\n    static cfToBirthDay(codiceFiscale) {\n        if (typeof codiceFiscale !== 'string' || codiceFiscale.length < 11) {\n            return null;\n        }\n        let birthDay = parseInt(codiceFiscale.substr(9,2));\n\n        if (isNaN(birthDay)) {\n            return null;\n        }\n\n        birthDay -= birthDay >= 40 ? 40 : 0;\n\n        if (birthDay < 1 || birthDay > 31) {\n            return null;\n        }\n        return birthDay;\n    }\n\n    /**\n     * Parse birth date information\n     * \n     * @param {string} codiceFiscale Partial or complete CF to parse\n     * @returns {Date|null} Birth Date\n     * @public\n     */\n    static cfToBirthDate(codiceFiscale) {\n        const birthDay = this.cfToBirthDay(codiceFiscale);\n        if (!birthDay) {\n            return null;\n        }\n\n        const birthMonth = this.cfToBirthMonth(codiceFiscale);\n        if (!birthMonth && birthMonth !== 0) {\n            return null;\n        }\n\n        const birthYear = this.cfToBirthYear(codiceFiscale);\n        if (!birthYear) {\n            return null;\n        }\n\n        const dt = moment(Date.UTC(birthYear, birthMonth, birthDay));\n        if (!dt.isValid()) {\n            return null;\n        }\n        return dt.toDate();\n    }\n\n    /**\n     * Parse birth place information\n     * \n     * @param {string} codiceFiscale Partial or complete CF to parse\n     * @returns {Object} {name, belfioreCode} Birth place\n     * @public\n     */\n    static cfToBirthPlace(codiceFiscale) {\n        if (typeof codiceFiscale !== 'string' || codiceFiscale.length < 15) {\n            return null;\n        }\n\n\n        const birthPlace = Belfiore[codiceFiscale.substr(11,4).toUpperCase()];\n        if (!birthPlace) {\n            return null;\n        }\n\n        const {creationDate, expirationDate} = birthPlace;\n        if (creationDate || expirationDate) {\n            const birthDate = this.cfToBirthDate(codiceFiscale);\n            if (!birthDate) {\n                return null;\n            }\n            let validityCheck = true;\n            if (creationDate) {\n                validityCheck = moment(birthDate).isSameOrAfter(moment(creationDate));\n            }\n            if(validityCheck && expirationDate) {\n                validityCheck = moment(birthDate).isSameOrBefore(moment(expirationDate));\n            }\n            if (!validityCheck) {\n                return null;\n            }\n        }\n        return birthPlace;\n    }\n\n    /**\n     * @param {string} fiscalCode 16 character Codice Fiscale to decode\n     * @returns {Object} {surname, name, year, month, day, gender, place} Decoded CF Info\n     */\n    static cfDecode(fiscalCode) {\n        const year = this.cfToBirthYear(fiscalCode),\n            month = this.cfToBirthMonth(fiscalCode),\n            day = this.cfToBirthDay(fiscalCode);\n        return {\n            surname: this.cfToSurname(fiscalCode),\n            name: this.cfToName(fiscalCode),\n\n            year,\n            month,\n            day,\n            date: new Date(Date.UTC(year, month, day)),\n\n            gender: this.cfToGender(fiscalCode),\n            place: (this.cfToBirthPlace(fiscalCode) || {}).name\n        };\n    }\n\n    /**\n     * Normalize diacritics\n     * \n     * @param {string} text Input text to normalize\n     * @returns {string|null} Output text w/o diacritics\n     */\n    static removeDiacritics(text) {\n        if (!text || typeof text !== 'string') {\n            return null;\n        }\n        return text.replace(/./gu, c => Diacritics[c]);\n    }\n\n    /**\n     * Parse surname to cf part\n     * \n     * @param {string} surname Partial or complete CF to parse\n     * @returns {string|null} partial cf\n     * @public\n     */\n    static surnameToCf(surname) {\n        if ((surname || '').trim().length < 2) {\n            return null;\n        }\n        \n        const noDiacriticsSurname = this.removeDiacritics(surname);\n        const consonants = (noDiacriticsSurname.match(new RegExp(`[${VALIDATOR.CONSONANT_LIST}]+`, 'ig')) || []).join('');\n        const vowels = (noDiacriticsSurname.match(new RegExp(`[${VALIDATOR.VOWEL_LIST}]+`, 'ig')) || []).join('');\n\n        const partialCf = (consonants + vowels + 'X').substr(0, 3);\n\n        if (partialCf.length < 3) {\n            return null;\n        }\n        return partialCf.toUpperCase();\n    }\n\n    /**\n     * Parse name to cf part\n     * \n     * @param {string} name Partial or complete CF to parse\n     * @returns {string|null} partial cf\n     * @public\n     */\n    static nameToCf(name) {\n        if ((name || '').trim().length < 2) {\n            return null;\n        }\n        \n        const noDiacriticsName = this.removeDiacritics(name);\n        const consonants = (noDiacriticsName.match(new RegExp(`[${VALIDATOR.CONSONANT_LIST}]+`, 'ig')) || []).join('');\n\n        if (consonants.length >= 4) {\n            return (consonants[0] + consonants.substr(2, 2)).toUpperCase();\n        }\n        return this.surnameToCf(name);\n    }\n\n    /**\n     * Parse year to cf part\n     * \n     * @param {string|number} year Birth year 2 or 4 digit string, number above 19XX or below 100\n     * @returns {string|null} partial cf\n     * @public\n     */\n    static yearToCf(year) {\n        let parsedYear = year;\n        if (typeof year === 'string') {\n            parsedYear = parseInt(year);\n        }\n        if (!(typeof parsedYear === 'number' && !isNaN(parsedYear) &&(parsedYear >= 1900 || parsedYear < 100))) {\n            return null;\n        }\n        return `0${parsedYear}`.substr(-2);\n    }\n\n    /**\n     * Parse month information\n     * \n     * @param {number} month Month number 0..11\n     * @returns {string|null} Birth Month CF code\n     * @public\n     */\n    static monthToCf(month) {\n        if (!(typeof month === 'number' && !isNaN(month))) {\n            return null;\n        }\n\n        return BirthMonth[month] || null;\n    }\n\n    /**\n     * Parse day information\n     * \n     * @param {number} day Day number 1..31\n     * @param {Gender|string} gender Gender enum value\n     * @returns {string|null} Birth Day CF code\n     * @public\n     */\n    static dayGenderToCf(day, gender) {\n        if (!(typeof day === 'number' && !isNaN(day) && (day > 0 && day < 32))) {\n            return null;\n        }\n        const genderValue = Gender[gender];\n        if (typeof genderValue !== 'number') {\n            return null;\n        }\n        return `0${day + genderValue}`.substr(-2);\n    }\n\n    /**\n     * Parse Year, Month, Day to Dated\n     * \n     * @param {number} year 4 digits Year\n     * @param {number} [month = 0] 1 or 2 digits Month 0..11\n     * @param {number} [day = 1] 1,2 digits Day 1..31\n     * @returns {Date|null} Date or null if provided year/month/day are not valid\n     */\n    static yearMonthDayToDate(year, month = 0, day = 1) {\n        if ([year, month, day].some(param => typeof param !== 'number') || year < 1861) {\n            return null;\n        }\n        const date = moment(Date.UTC(year, month, day));\n        if (!date.isValid() || date.year() !== year || date.month() !== month || date.date() !== day) {\n            return null;\n        }\n        return date.toDate();\n    }\n\n    /**\n     * Parse a Dated and Gender information to create Date/Gender CF part\n     * \n     * @param {Date|Moment|string|Array<number>} date Date or Moment instance, ISO8601 date string or array of numbers [year, month, day]\n     * @returns {Date|null} Parsed Date or null if not valid\n     * @public\n     */\n    static parseDate(date) {\n        if (!(\n            date instanceof Date ||\n            date instanceof moment ||\n            typeof date === 'string' && (new RegExp(DATE_VALIDATOR.ISO8601_SHORT_DATE)).test(date) ||\n            Array.isArray(date) && !date.some(value => typeof value !== 'number')\n        )) {\n            return null;\n        }\n\n        const parsedDate = moment(date);\n        if (!parsedDate.isValid()){\n            return null;\n        }\n        return parsedDate.toDate();\n    }\n\n    /**\n     * Parse a Dated and Gender information to create Date/Gender CF part\n     * \n     * @param {Date|Moment|string|Array<number>} date Date or Moment instance, ISO8601 date string or array of numbers [year, month, day]\n     * @param {Gender|string} gender Gender enum value\n     * @returns {string|null} Birth date and Gender CF code\n     * @public\n     */\n    static dateGenderToCf(date, gender) {\n        if (!Gender.hasOwnProperty(gender)) {\n            return null;\n        }\n        const parsedDate = this.parseDate(date);\n        if (!parsedDate) {\n            return null;\n        }\n        \n        const cfYear = this.yearToCf(parsedDate.getFullYear());\n        const cfMonth = this.monthToCf(parsedDate.getMonth());\n        const cfDayGender = this.dayGenderToCf(parsedDate.getDate(), gender);\n\n        return `${cfYear}${cfMonth}${cfDayGender}`;\n    }\n\n    /**\n     * Parse a Dated and Gender information to create Date/Gender CF part\n     * \n     * @param {Date|Moment|string|Array<number>} date Date or Moment instance, ISO8601 date string or array of numbers [year, month, day]\n     * @param {string} name City or Country name\n     * @param {string} [province] Province code for cities\n     * @returns {string|null} Matching place belfiore code, if only once is matching criteria\n     * @public\n     *//**\n     * Parse place name and province to Belfiore code\n     * @param {string} name City or Country name\n     * @param {string} [province] Province code for cities\n     * @returns {string|null} Matching place belfiore code, if only once is matching criteria\n     * @public\n     */\n    static placeToCf(...args) {\n        let targetDate = this.parseDate(args[0]);\n\n        let [name, province] = args.filter(input => typeof input === 'string');\n        if (!province) {\n            return (Belfiore.active(targetDate).findByName(name) || {}).belfioreCode;\n        }\n        const results = Belfiore.searchByName(name).toArray().filter(place => province.trim().toUpperCase() === place.province);\n        if (results.length === 1) {\n            return results[0].belfioreCode;\n        }\n        return null;\n    }\n\n    /**\n     * Generates full CF\n     * \n     * @param {Object} input Input Object\n     * @param {string} input.surname Surname\n     * @param {string} input.name Name\n     * @param {number} [input.year] Birth Year\n     * @param {number} [input.month] Birth Month\n     * @param {number} [input.day] Birth Day\n     * @param {Date|Moment} [input.date] Birth Date\n     * @param {Gender|string} input.gender Gender M|F\n     * @param {string} input.place Place name\n     * @returns {string|null} Complete CF\n     */\n    static encodeCf({\n        surname,\n        name,\n\n        year,\n        month,\n        day,\n        date,\n\n        gender,\n        place\n    }) {\n        const dtParams = this.parseDate(date) || this.yearMonthDayToDate(year, month, day);\n        const generator = [\n            () => this.surnameToCf(surname),\n            () => this.nameToCf(name),\n            () => this.dateGenderToCf(dtParams, gender),\n            () => this.placeToCf(dtParams, place),\n            () => CheckDigitizer.checkDigit(cf)\n        ];\n        let cf = '';\n        for (let i=0; i<generator.length; i++) {\n            const cfValue = generator[i]();\n            if (!cfValue) {\n                return null;\n            }\n            cf += cfValue;\n        }\n\n        return cf;\n    }\n}\n\nexport default Parser;","import CheckDigitizer from './checkDigitizer';\nimport DATE_VALIDATOR from './dateValidator.const';\nimport Diacritics from './diacritics';\nimport Gender from './gender.enum';\nimport moment from 'moment';\nimport Omocode from './omocode.enum';\nimport Parser from './parser';\nimport VALIDATOR from './validator.const';\n\n/**\n * @namespace Validator\n */\nclass Validator {\n\n    /**\n     * Validation regexp for the given surname or generic\n     * @param {string} surname Optional surname to generate validation regexp\n     * @returns {RegExp} CF Surname matcher\n     * @public\n     */\n    static cfSurname(surname) {\n        let matcher = VALIDATOR.NAME_MATCHER;\n        if (surname) {\n            matcher = Parser.surnameToCf(surname) || matcher;\n        }\n        return new RegExp(`^${matcher}$`, 'iu');\n    }\n\n    /**\n     * Validation regexp for the given name or generic\n     * @param {string} name Optional name to generate validation regexp\n     * @returns {RegExp} CF name matcher\n     * @public\n     */\n    static cfName(name) {\n        let matcher = VALIDATOR.NAME_MATCHER;\n        if (name) {\n            matcher = Parser.nameToCf(name) || matcher;\n        }\n        return new RegExp(`^${matcher}$`, 'iu');\n    }\n\n    /**\n     * Validation regexp for the given year or generic\n     * @param {number} year Optional year to generate validation regexp\n     * @returns {RegExp} CF year matcher\n     * @public\n     */\n    static cfYear(year) {\n        let matcher = VALIDATOR.YEAR_MATCHER;\n        if (year) {\n            const parsedYear = Parser.yearToCf(year);\n            if (parsedYear) {\n                matcher = parsedYear.replace(/\\d/gu, n => `[${n}${Omocode[n]}]`);\n            }\n        }\n        return new RegExp(`^${matcher}$`, 'iu');\n    }\n\n    /**\n     * Validation regexp for the given month or generic\n     * @param {number} month Optional month to generate validation regexp\n     * @returns {RegExp} CF month matcher\n     * @public\n     */\n    static cfMonth(month) {\n        let matcher = VALIDATOR.MONTH_MATCHER;\n        if (month) {\n            matcher = Parser.monthToCf(month) || matcher;\n        }\n        return new RegExp(`^${matcher}$`, 'iu');\n    }\n\n    /**\n     * Validation regexp for the given year or generic\n     * @param {number} day Optional day to generate validation regexp\n     * @returns {RegExp} CF day matcher\n     * @public\n     */\n    static cfDay(day) {\n        let matcher = VALIDATOR.DAY_MATCHER;\n        if (day) {\n            const parsedDayM = Parser.dayGenderToCf(day, 'M');\n            if (parsedDayM) {\n                const matcherM = parsedDayM.replace(/\\d/gu, n => `[${n}${Omocode[n]}]`);\n                const matcherF = Parser.dayGenderToCf(day, 'F').replace(/\\d/gu, n => `[${n}${Omocode[n]}]`);\n                matcher = `(?:${matcherM})|(?:${matcherF})`;\n            }\n        }\n        return new RegExp(`^${matcher}$`, 'iu');\n    }\n\n    /**\n     * Validation regexp for the given year or generic\n     * @param {number} day Optional day to generate validation regexp\n     * @param {'M'|'F'} [gender] Gender @see Gender\n     * @returns {RegExp} CF day and gender matcher\n     * @public\n     */\n    static cfDayGender(day, gender) {\n        if (!gender) {\n            return this.cfDay(day);\n        }\n        let matcher;\n        if (day) {\n            const parsedDayGender = Parser.dayGenderToCf(day, gender);\n            if (parsedDayGender) {\n                matcher = parsedDayGender.replace(/\\d/gu, n => `[${n}${Omocode[n]}]`);\n            } else {\n                throw new Error('[Validator.cfDayGender] Provided day is not valid');\n            }\n        } else {\n            switch (gender) {\n            case 'M':\n                matcher = VALIDATOR.MALE_DAY_MATCHER;\n                break;\n            case 'F':\n                matcher = VALIDATOR.FEMALE_DAY_MATCHER;\n                break;\n            default:\n                throw new Error('[Validator.cfDayGender] Provided gender is not valid');\n            }\n        }\n        return new RegExp(`^${matcher}$`, 'iu');\n    }\n\n    /**\n     * Validation regexp for the given year or generic\n     * @param {Date|Moment|Array<number>} date Optional date to generate validation regexp\n     * @param {'M'|'F'} [gender] @see Gender\n     * @returns {RegExp} CF date and gender matcher\n     * @public\n     */\n    static cfDateGender(date, gender) {\n        let matcher = VALIDATOR.FULL_DATE_MATCHER;\n        if (date && gender) {\n            const parsedDateGender = Parser.dateGenderToCf(date, gender);\n            if (parsedDateGender) {\n                matcher = parsedDateGender.replace(/\\d/gu, n => `[${n}${Omocode[n]}]`);\n            } else {\n                throw new Error('[Validator.cfDateGender] Provided date is not valid');\n            }\n        } else if (gender) {\n            switch (gender) {\n            case 'M':\n                matcher = VALIDATOR.MALE_FULL_DATE_MATCHER;\n                break;\n            case 'F':\n                matcher = VALIDATOR.FEMALE_FULL_DATE_MATCHER;\n                break;\n            default:\n                throw new Error('[Validator.cfDateGender] Provided gender is not valid');\n            }\n        }\n        return new RegExp(`^${matcher}$`, 'iu');\n    }\n\n    /**\n     * @param {string} placeName Optional place name to generate validation regexp\n     * @returns {RegExp} CF place matcher\n     * @public\n     *//**\n     * @param {Date|Moment|Array<number>} [date] Optional date to generate validation regexp\n     * @param {string} placeName Optional place name to generate validation regexp\n     * @returns {RegExp} CF place matcher\n     * @public\n     */\n    static cfPlace(...args) {\n        let matcher = VALIDATOR.BELFIORE_CODE_MATCHER;\n        if (args.filter(param => !!param).length > moment(args[0]).isValid()) {\n            const parsedPlace = Parser.placeToCf(...args);\n            if (parsedPlace) {\n                matcher = parsedPlace.replace(/\\d/gu, n => `[${n}${Omocode[n]}]`);\n            } else {\n                matcher = '';\n            }\n        }\n        return new RegExp(`^${matcher}$`, 'iu');\n    }\n\n    /**\n     * Generates full CF validator based on given optional input or generic\n     * \n     * @param {Object} input Input Object\n     * @param {string} input.surname Surname\n     * @param {string} input.name Name\n     * @param {number} [input.year] Birth Year\n     * @param {number} [input.month] Birth Month\n     * @param {number} [input.day] Birth Day\n     * @param {Date|Moment} [input.date] Birth Date\n     * @param {Gender|string} input.gender Gender M|F\n     * @param {string} input.place Place name\n     * @returns {RegExp} CodiceFiscale matcher\n     */\n    static codiceFiscale(input) {\n        let matcher = VALIDATOR.CODICE_FISCALE;\n        if (input) {\n            const parsedCf = Parser.encodeCf(input);\n\n            if (parsedCf) {\n                matcher = parsedCf.replace(/\\d/gu, n => `[${n}${Omocode[n]}]`);\n            } else {\n                const { surname, name, year, month, day, date, gender, place } = input;\n                if (surname || name || year || month || day || date || gender || place) {\n                    const dtParams = Parser.parseDate(date) || Parser.yearMonthDayToDate(year, month, day);\n                    const generator = [\n                        () => this.cfSurname(surname),\n                        () => this.cfName(name),\n                        () => this.cfDateGender(dtParams, gender),\n                        () => this.cfPlace(dtParams, place)\n                    ];\n\n                    matcher = '';\n                    for (let i=0; i<generator.length; i++) {\n                        const cfPartValidator = generator[i]();\n                        if (!cfPartValidator) {\n                            break;\n                        }\n                        const cfValue = (cfPartValidator.toString().match(/\\^(.+)\\$/) || [])[1];\n                        if (!cfValue) {\n                            break;\n                        }\n                        matcher += `(?:${cfValue})`;\n                    }\n                    // Final addition of CheckDigit\n                    matcher += VALIDATOR.CHECK_DIGIT;\n                }\n            }\n        }\n        return new RegExp(`^${matcher}$`, 'iu');\n    }\n\n\n    /**\n     * Returns surname validator based on given cf or generic\n     * \n     * @param {string} codiceFiscale Partial or complete CF to parse\n     * @returns {RegExp} Generic or specific regular expression\n     * @public\n     */\n    static surname(codiceFiscale) {\n        const ANY_LETTER = `[${Diacritics.matcherBy(/^[A-Z]$/ui)}]`;\n        let matcher = `${ANY_LETTER}+`;\n        if (typeof codiceFiscale === 'string' && (/^[A-Z]{1,3}/iu).test(codiceFiscale)) {\n            const surnameCf = codiceFiscale.substr(0,3);\n            \n            const diacriticizer = matchingChars => (matchingChars || '').split('').map(char => `[${Diacritics.insensitiveMatcher[char]}]`);\n\n            const matchFromCf = (cf, charMatcher) => diacriticizer((cf.match(new RegExp(charMatcher, 'ig')) || [])[0]);\n\n            const cons = matchFromCf(surnameCf, `^[${VALIDATOR.CONSONANT_LIST}]{1,3}`);\n            const vow = matchFromCf(surnameCf, `[${VALIDATOR.VOWEL_LIST}]{1,3}`);\n            \n            const diacriticsVowelList = Diacritics.matcherBy(new RegExp(`^[${VALIDATOR.VOWEL_LIST}]$`, 'ui'));\n\n            switch(cons.length) {\n            case 3:\n                matcher = cons.join(`[${diacriticsVowelList}]*`) + `${ANY_LETTER}*`;\n                break;\n            case 2: {\n                const possibilities = [\n                    `${vow[0]}${cons[0]}[${diacriticsVowelList}]*${cons[1]}`,\n                    `${cons[0]}${vow.join('')}[${diacriticsVowelList}]*${cons[1]}`,\n                    `${cons.join('')}${vow[0]}`\n                ];\n                matcher = `(?:${possibilities.join('|')})[${diacriticsVowelList}]*`;\n                break;\n            }\n            case 1: {\n                const possibilities = [\n                    `${vow.slice(0,2).join('')}[${diacriticsVowelList}]*${cons}`,\n                    `${vow[0]}${cons}${vow[1]}`,\n                    `${cons[0]+vow.slice(0,2).join('')}`\n                ];\n                matcher = `(?:${possibilities.join('|')})[${diacriticsVowelList}]*`;\n                break;\n            }\n            default:\n                matcher = `${vow.join('')}[${diacriticsVowelList}]*`;\n            }\n        }\n\n        return new RegExp(`^${matcher}$`, 'iu');\n    }\n\n    /**\n     * Returns name validator based on given cf or generic\n     * \n     * @param {string} codiceFiscale Partial or complete CF to parse\n     * @returns {RegExp} Generic or specific regular expression\n     * @public\n     */\n    static name(codiceFiscale) {\n        if (typeof codiceFiscale === 'string' && (new RegExp(`^[A-Z]{3}[${VALIDATOR.CONSONANT_LIST}]{3}`, 'iu')).test(codiceFiscale)) {\n            const ANY_LETTER = `[${Diacritics.matcherBy(/^[A-Z]$/ui)}]`;\n\n            const nameCf = codiceFiscale.substr(3,3);\n\n            const cons = ((nameCf.match(new RegExp(`^[${VALIDATOR.CONSONANT_LIST}]{1,3}`, 'ig')) || [])[0] || '')\n                .split('').map(char => `[${Diacritics.insensitiveMatcher[char]}]`);\n\n            const diacriticsVowelList = Diacritics.matcherBy(new RegExp(`^[${VALIDATOR.VOWEL_LIST}]$`, 'ui'));\n            const diacriticsConsonantList = Diacritics.matcherBy(new RegExp(`^[${VALIDATOR.CONSONANT_LIST}]$`, 'ui'));\n\n            const matcher = `[${diacriticsVowelList}]*${cons[0]}[${diacriticsVowelList}]*(?:[${diacriticsConsonantList}][${diacriticsVowelList}]*)?`\n                + cons.slice(1,3).join(`[${diacriticsVowelList}]*`) + `${ANY_LETTER}*`;\n            \n            return new RegExp(`^${matcher}$`, 'iu');\n        }\n        return this.surname((codiceFiscale || '').substr(3,3));\n    }\n\n    /**\n     * Returns iso8601 date validator based on given cf or generic\n     * \n     * @param {string} codiceFiscale Partial or complete CF to parse\n     * @returns {RegExp} Generic or specific regular expression\n     * @public\n     */\n    static date(codiceFiscale){\n        let matcher = DATE_VALIDATOR.ISO8601_DATE_TIME;\n        if (codiceFiscale) {\n            const parsedDate = Parser.cfToBirthDate(codiceFiscale);\n            if (parsedDate) {\n                const dateIso8601 = parsedDate.toJSON();\n                if (moment().diff(moment(parsedDate), 'y') < 50) {\n                    const century = parseInt(dateIso8601.substr(0,2));\n                    const centuries = [\n                        century -1,\n                        century\n                    ].map(year => year.toString().padStart(2, 0));\n                    matcher = `(?:${centuries.join('|')})` + dateIso8601.substr(2,8);\n                } else {\n                    matcher = dateIso8601.substr(0,10);\n                }\n            }\n        }\n        return new RegExp(`^${matcher}(?:T${DATE_VALIDATOR.TIME}(?:${DATE_VALIDATOR.TIMEZONE})?)?$`, 'iu');\n    }\n\n    /**\n     * Returns gender validator based on given cf or generic\n     * \n     * @param {string} codiceFiscale Partial or complete CF to parse\n     * @returns {RegExp} Generic or specific regular expression\n     * @public\n     */\n    static gender(codiceFiscale) {\n        const parsedGender = Parser.cfToGender(codiceFiscale);\n        const matcher = parsedGender || `[${Gender.toArray().join('')}]`;\n        return new RegExp(`^${matcher}$`, 'u');\n    }\n\n    \n\n    /**\n     * Returns place validator based on given cf or generic\n     * \n     * @param {string} codiceFiscale Partial or complete CF to parse\n     * @returns {RegExp} Generic or specific regular expression\n     * @public\n     */\n    static place(codiceFiscale) {\n        let matcher = '.+';\n        const parsedPlace = Parser.cfToBirthPlace(codiceFiscale);\n\n        if (parsedPlace) {\n            const nameMatcher = parsedPlace.name.replace(/./gu, c => Diacritics[c]===c ? c : `[${c}${Diacritics[c]}]`);\n            matcher = `(?:(?:${nameMatcher})|${parsedPlace.belfioreCode})`;\n        }\n\n        return new RegExp(`^${matcher}$`, 'ui');\n    }\n\n    /**\n     * Check the given cf validity by form, birth date/place and digit code\n     * \n     * @param {string} codiceFiscale Complete CF to parse\n     * @returns {boolean} Generic or specific regular expression\n     * @public\n     */\n    static isValid(codiceFiscale) {\n        const matcher = new RegExp(`^(?:${VALIDATOR.CODICE_FISCALE})$`, 'ui');\n        if (\n            // Checking form validity\n            !matcher.test(codiceFiscale) ||\n            //Checking 16th char check digit validity\n            codiceFiscale.substr(15, 1).toUpperCase() !== CheckDigitizer.checkDigit(codiceFiscale) ||\n            //Checking Birth date/place validity\n            !Parser.cfToBirthPlace(codiceFiscale)\n        ) {\n            return false;\n        }\n        return true;\n    }\n}\n\nexport default Validator;","import BirthMonth from './birthMonth.enum';\nimport Belfiore from './belfiore';\nimport CheckDigitizer from './checkDigitizer';\nimport DATE_VALIDATOR from './dateValidator.const';\nimport Diacritics from './diacritics';\nimport Gender from './gender.enum';\nimport Omocode from './omocode.enum';\nimport Parser from './parser';\nimport Validator from './validator';\nimport VALIDATOR from './validator.const';\n\n/**\n * @module CodiceFiscaleUtils\n */\nexport {\n    /**\n     * {@link Belfiore}\n     */\n    Belfiore,\n    /**\n     * {@link BirthMonth}\n     */\n    BirthMonth,\n    /**\n     * {@link CheckDigitizer}\n     */\n    CheckDigitizer,\n    /**\n     * {@link DATE_VALIDATOR}\n     */\n    DATE_VALIDATOR,\n    /**\n     * {@link Diacritics}\n     */\n    Diacritics,\n    /**\n     * {@link Gender}\n     */\n    Gender,\n    /**\n     * {@link Omocode}\n     */\n    Omocode,\n    /**\n     * {@link Parser}\n     */\n    Parser,\n    /**\n     * {@link VALIDATOR}\n     */\n    VALIDATOR,\n    /**\n     * {@link Validator}\n     */\n    Validator\n};"],"sourceRoot":""}